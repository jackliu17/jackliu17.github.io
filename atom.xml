<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cowboy Tech</title>
  <subtitle>The best preparation for tomorrow is doing your best today</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jackliu17.github.io/"/>
  <updated>2016-04-26T01:23:31.000Z</updated>
  <id>http://jackliu17.github.io/</id>
  
  <author>
    <name>Jack Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android_Studio相关操作</title>
    <link href="http://jackliu17.github.io/2016/04/26/Android-Studio%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    <id>http://jackliu17.github.io/2016/04/26/Android-Studio相关操作/</id>
    <published>2016-04-26T01:14:55.000Z</published>
    <updated>2016-04-26T01:23:31.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;创建assest-folder&quot;&gt;&lt;a href=&quot;#创建assest-folder&quot; class=&quot;headerlink&quot; title=&quot;创建assest folder&quot;&gt;&lt;/a&gt;创建assest folder&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/android_asset_foldrer.png&quot; alt=&quot;assest&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;导入jar文件&quot;&gt;&lt;a href=&quot;#导入jar文件&quot; class=&quot;headerlink&quot; title=&quot;导入jar文件&quot;&gt;&lt;/a&gt;导入jar文件&lt;/h2&gt;&lt;h3 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/importjar1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2&quot;&gt;&lt;a href=&quot;#2&quot; class=&quot;headerlink&quot; title=&quot;2&quot;&gt;&lt;/a&gt;2&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/importjar2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;3&quot;&gt;&lt;a href=&quot;#3&quot; class=&quot;headerlink&quot; title=&quot;3&quot;&gt;&lt;/a&gt;3&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/importjar3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;4&quot;&gt;&lt;a href=&quot;#4&quot; class=&quot;headerlink&quot; title=&quot;4&quot;&gt;&lt;/a&gt;4&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/importjar4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;5&quot;&gt;&lt;a href=&quot;#5&quot; class=&quot;headerlink&quot; title=&quot;5&quot;&gt;&lt;/a&gt;5&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/importjar5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;6&quot;&gt;&lt;a href=&quot;#6&quot; class=&quot;headerlink&quot; title=&quot;6&quot;&gt;&lt;/a&gt;6&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/importjar6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建assest-folder&quot;&gt;&lt;a href=&quot;#创建assest-folder&quot; class=&quot;headerlink&quot; title=&quot;创建assest folder&quot;&gt;&lt;/a&gt;创建assest folder&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="Android" scheme="http://jackliu17.github.io/tags/Android/"/>
    
      <category term="Android_Studio" scheme="http://jackliu17.github.io/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>使用OpenGL_ES显示图像</title>
    <link href="http://jackliu17.github.io/2016/04/24/%E4%BD%BF%E7%94%A8OpenGL-ES%E6%98%BE%E7%A4%BA%E5%9B%BE%E5%83%8F/"/>
    <id>http://jackliu17.github.io/2016/04/24/使用OpenGL-ES显示图像/</id>
    <published>2016-04-24T06:58:54.000Z</published>
    <updated>2016-04-24T08:33:52.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/android-training-geek/opengl-index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;转载&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://developer.android.com/training/graphics/opengl/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Android框架提供了大量的标准工具，用来创建吸引人的，功能丰富的图形界面。然而，如果我们希望应用在屏幕上所绘制的内容进行更多的控制，或者正在尝试建立三维图像，那么我们就需要一个不同的工具了。由Android框架提供的OpenGL ES接口给予我们一组可以显示高级动画和图形的工具集，它的功能仅仅受限于我们自身的想象力。同时，在许多Android设备上搭载的图形处理单元（GPU）都能为其提供GPU加速等性能优化。&lt;/p&gt;
&lt;p&gt;这系列课程将展示如何使用OpenGL构建应用的基础知识，包括配置，绘制对象，移动图形元素以及响应点击事件。&lt;/p&gt;
&lt;p&gt;这系列课程所涉及的样例代码使用的是OpenGL ES 2.0接口，这是当前Android设备所推荐的接口版本。关于更多OpenGL ES的版本信息，可以阅读：&lt;a href=&quot;http://developer.android.com/guide/topics/graphics/opengl.html#choosing-version&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenGL开发手册&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note：注意不要把OpenGL ES 1.x版本的接口和OpenGL ES 2.0的接口混合调用。这两种版本的接口不是通用的。如果尝试混用它们可能会让你感到无奈和沮丧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;建立OpenGL-ES的环境&quot;&gt;&lt;a href=&quot;#建立OpenGL-ES的环境&quot; class=&quot;headerlink&quot; title=&quot;建立OpenGL ES的环境&quot;&gt;&lt;/a&gt;建立OpenGL ES的环境&lt;/h1&gt;&lt;p&gt;要在应用中使用OpenGL ES绘制图像，我们必须为它们创建一个View容器。一种比较直接的方法是实现&lt;code&gt;GLSurfaceView&lt;/code&gt;类和&lt;code&gt;GLSurfaceView.Renderer&lt;/code&gt;类。其中，&lt;code&gt;GLSurfaceView&lt;/code&gt;是一个View容器，它用来存放使用OpenGL绘制的图形，而&lt;code&gt;GLSurfaceView.Renderer&lt;/code&gt;则用来控制在该View中绘制的内容。关于这两个类的更多信息，你可以阅读：&lt;a href=&quot;http://developer.android.com/guide/topics/graphics/opengl.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenGL ES开发手册&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;GLSurfaceView&lt;/code&gt;是一种将OpenGL ES集成到应用中的方法之一。对于一个全屏的或者接近全屏的图形View，使用它是一个理想的选择。开发者如果希望把OpenGL ES的图形集成在布局的一小部分里面，那么可以考虑使用&lt;code&gt;TextureView&lt;/code&gt;。对于喜欢自己动手实现的开发者来说，还可以通过使用&lt;code&gt;SurfaceView&lt;/code&gt;搭建一个OpenGL ES View，但这将需要编写更多的代码。&lt;/p&gt;
&lt;p&gt;在这节课中，我们将展示如何在一个的&lt;code&gt;Activity&lt;/code&gt;中完成&lt;code&gt;GLSurfaceView&lt;/code&gt;和&lt;code&gt;GLSurfaceView.Renderer&lt;/code&gt;的最简单的实现&lt;/p&gt;
&lt;h2 id=&quot;在Manifest配置文件中声明使用OpenGL-ES&quot;&gt;&lt;a href=&quot;#在Manifest配置文件中声明使用OpenGL-ES&quot; class=&quot;headerlink&quot; title=&quot;在Manifest配置文件中声明使用OpenGL ES&quot;&gt;&lt;/a&gt;在Manifest配置文件中声明使用OpenGL ES&lt;/h2&gt;&lt;p&gt;为了让应用能够使用OpenGL ES 2.0接口，我们必须将下列声明添加到Manifest配置文件当中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;uses-feature android:glEsVersion=&amp;quot;0x00020000&amp;quot; android:required=&amp;quot;true&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果我们的应用使用纹理压缩（Texture Compression），那么我们必须对支持的压缩格式也进行声明，确保应用仅安装在可以兼容的设备上：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;supports-gl-texture android:name=&amp;quot;GL_OES_compressed_ETC1_RGB8_texture&amp;quot; /&amp;gt;
&amp;lt;supports-gl-texture android:name=&amp;quot;GL_OES_compressed_paletted_texture&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;更多关于纹理压缩的内容，可以阅读：&lt;a href=&quot;http://developer.android.com/guide/topics/graphics/opengl.html#textures&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenGL开发手册&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;为OpenGL-ES图形创建一个activity&quot;&gt;&lt;a href=&quot;#为OpenGL-ES图形创建一个activity&quot; class=&quot;headerlink&quot; title=&quot;为OpenGL ES图形创建一个activity&quot;&gt;&lt;/a&gt;为OpenGL ES图形创建一个activity&lt;/h2&gt;&lt;p&gt;使用OpenGL ES的安卓应用就像其它类型的应用一样有自己的用户接口，即也拥有多个Activity。主要的区别体现在Acitivity布局内容上的差异。在许多应用中你可能会使用&lt;code&gt;TextView&lt;/code&gt;，&lt;code&gt;Button&lt;/code&gt;和&lt;code&gt;ListView&lt;/code&gt;等，而在使用OpenGL ES的应用中，我们还可以添加一个&lt;code&gt;GLSurfaceView&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下面的代码展示了一个使用&lt;code&gt;GLSurfaceView&lt;/code&gt;作为其主View的Activity：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class OpenGLES20Activity extends Activity {

private GLSurfaceView mGLView;

@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    // Create a GLSurfaceView instance and set it
    // as the ContentView for this Activity.
    mGLView = new MyGLSurfaceView(this);
    setContentView(mGLView);
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Note：OpenGL ES 2.0需要Android 2.2（API Level 8）或更高版本的系统，所以确保你的Android项目的API版本满足该要求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;构建一个GLSurfaceView对象&quot;&gt;&lt;a href=&quot;#构建一个GLSurfaceView对象&quot; class=&quot;headerlink&quot; title=&quot;构建一个GLSurfaceView对象&quot;&gt;&lt;/a&gt;构建一个GLSurfaceView对象&lt;/h2&gt;&lt;p&gt;&lt;code&gt;GLSurfaceView&lt;/code&gt;是一种比较特殊的View，我们可以在该View中绘制OpenGL ES图形，不过它自己并不做太多和绘制图形相关的任务。绘制对象的任务是由你在该View中配置的&lt;code&gt;GLSurfaceView.Renderer&lt;/code&gt;所控制的。事实上，这个对象的代码非常简短，你可能会希望不要继承它，直接创建一个未经修改的&lt;code&gt;GLSurfaceView&lt;/code&gt;实例，不过请不要这么做，因为我们需要继承该类来捕捉触控事件，这方面知识会在响应触摸事件（该系列课程的最后一节课）中做进一步的介绍。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GLSurfaceView&lt;/code&gt;的核心代码非常简短，所以对于一个快速的实现而言，我们通常可以在Acitvity中创建一个内部类并使用它：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class MyGLSurfaceView extends GLSurfaceView {

private final MyGLRenderer mRenderer;

public MyGLSurfaceView(Context context){
    super(context);

    // Create an OpenGL ES 2.0 context
    setEGLContextClientVersion(2);

    mRenderer = new MyGLRenderer();

    // Set the Renderer for drawing on the GLSurfaceView
    setRenderer(mRenderer);
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另一个对于&lt;code&gt;GLSurfaceView&lt;/code&gt;实现的可选选项，是将渲染模式设置为：&lt;code&gt;GLSurfaceView.RENDERMODE_WHEN_DIRTY&lt;/code&gt;，其含义是：仅在你的绘制数据发生变化时才在视图中进行绘制操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Render the view only when there is a change in the drawing data
setRenderMode(GLSurfaceView.RENDERMODE_WHEN_DIRTY);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果选用这一配置选项，那么除非调用了&lt;code&gt;requestRender()&lt;/code&gt;，否则&lt;code&gt;GLSurfaceView&lt;/code&gt;不会被重新绘制，这样做可以让应用的性能及效率得到提高。&lt;/p&gt;
&lt;h2 id=&quot;构建一个渲染类&quot;&gt;&lt;a href=&quot;#构建一个渲染类&quot; class=&quot;headerlink&quot; title=&quot;构建一个渲染类&quot;&gt;&lt;/a&gt;构建一个渲染类&lt;/h2&gt;&lt;p&gt;在一个使用OpenGL ES的应用中，一个&lt;code&gt;GLSurfaceView.Renderer&lt;/code&gt;类的实现（或者我们将其称之为渲染器），正是事情变得有趣的地方。该类会控制和其相关联的&lt;code&gt;GLSurfaceView&lt;/code&gt;，具体而言，它会控制在&lt;code&gt;GLSurfaceView&lt;/code&gt;上绘制的内容。在渲染器中，一共有三个方法会被Android系统调用，以此来明确要在&lt;code&gt;GLSurfaceView&lt;/code&gt;上绘制的内容以及如何绘制：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;onSurfaceCreated()&lt;/code&gt;：调用一次，用来配置View的OpenGL ES环境。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onDrawFrame()&lt;/code&gt;：每次重新绘制View时被调用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onSurfaceChanged()&lt;/code&gt;：如果View的几何形态发生变化时会被调用，例如当设备的屏幕方向发生改变时。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面是一个非常基本的OpenGL ES渲染器的实现，它仅仅在&lt;code&gt;GLSurfaceView&lt;/code&gt;中画一个黑色的背景：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class MyGLRenderer implements GLSurfaceView.Renderer {

public void onSurfaceCreated(GL10 unused, EGLConfig config) {
    // Set the background frame color
    GLES20.glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
}

public void onDrawFrame(GL10 unused) {
    // Redraw background color
    GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);
}

public void onSurfaceChanged(GL10 unused, int width, int height) {
    GLES20.glViewport(0, 0, width, height);
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;就是这样！上面的代码创建了一个简单地应用程序，它使用OpenGL让屏幕呈现为黑色。虽然它的代码看上去并没有做什么非常有意思的事情，但是通过创建这些类，我们已经对使用OpenGL绘制图形有了基本的认识和铺垫。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note：你可能想知道，自己明明使用的是OpenGL ES 2.0接口，为什么这些方法会有一个GL10的参数。这是因为这些方法的签名（Method Signature）在2.0接口中被简&amp;gt;单地重用了，以此来保持Android框架的代码尽量简单。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你对OpenGL ES接口很熟悉，那么你现在就可以在你的应用中构建一个OpenGL ES的环境并绘制图形了。当然， 如果你希望获取更多的帮助来学会使用OpenGL，那么请继续学习下一节课程获取更多的知识。&lt;/p&gt;
&lt;h1 id=&quot;定义形状&quot;&gt;&lt;a href=&quot;#定义形状&quot; class=&quot;headerlink&quot; title=&quot;定义形状&quot;&gt;&lt;/a&gt;定义形状&lt;/h1&gt;&lt;p&gt;在一个OpenGL ES View的上下文（Context）中定义形状，是创建你的杰作所需要的第一步。在了解关于OpenGL ES如何定义图形对象的基本知识之前，通过OpenGL ES 绘图可能会有些困难。&lt;/p&gt;
&lt;p&gt;这节课将讲解OpenGL ES相对于Android设备屏幕的坐标系，定义形状和形状表面的基本知识，如定义一个三角形和一个矩形。&lt;/p&gt;
&lt;h2 id=&quot;定义一个三角形&quot;&gt;&lt;a href=&quot;#定义一个三角形&quot; class=&quot;headerlink&quot; title=&quot;定义一个三角形&quot;&gt;&lt;/a&gt;定义一个三角形&lt;/h2&gt;&lt;p&gt;OpenGL ES允许我们使用三维空间的坐标来定义绘画对象。所以在我们能画三角形之前，必须先定义它的坐标。在OpenGL 中，典型的办法是为坐标定义一个浮点型的顶点数组。为了高效起见，我们可以将坐标写入一个&lt;code&gt;ByteBuffer&lt;/code&gt;，它将会传入OpenGl ES的图形处理流程中：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class Triangle {

private FloatBuffer vertexBuffer;

// number of coordinates per vertex in this array
static final int COORDS_PER_VERTEX = 3;
static float triangleCoords[] = {   // in counterclockwise order:
         0.0f,  0.622008459f, 0.0f, // top
        -0.5f, -0.311004243f, 0.0f, // bottom left
         0.5f, -0.311004243f, 0.0f  // bottom right
};

// Set color with red, green, blue and alpha (opacity) values
float color[] = { 0.63671875f, 0.76953125f, 0.22265625f, 1.0f };

public Triangle() {
    // initialize vertex byte buffer for shape coordinates
    ByteBuffer bb = ByteBuffer.allocateDirect(
            // (number of coordinate values * 4 bytes per float)
            triangleCoords.length * 4);
    // use the device hardware&amp;apos;s native byte order
    bb.order(ByteOrder.nativeOrder());

    // create a floating point buffer from the ByteBuffer
    vertexBuffer = bb.asFloatBuffer();
    // add the coordinates to the FloatBuffer
    vertexBuffer.put(triangleCoords);
    // set the buffer to read the first coordinate
    vertexBuffer.position(0);
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;默认情况下，OpenGL ES会假定一个坐标系，在这个坐标系中，[0, 0, 0]（分别对应X轴坐标, Y轴坐标, Z轴坐标）对应的是GLSurfaceView的中心。[1, 1, 0]对应的是右上角，[-1, -1, 0]对应的则是左下角。如果想要看此坐标系的插图说明，可以阅读&lt;a href=&quot;http://developer.android.com/guide/topics/graphics/opengl.html#faces-winding&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenGL ES开发手册&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;定义一个矩形&quot;&gt;&lt;a href=&quot;#定义一个矩形&quot; class=&quot;headerlink&quot; title=&quot;定义一个矩形&quot;&gt;&lt;/a&gt;定义一个矩形&lt;/h2&gt;&lt;p&gt;在OpenGL中定义三角形非常简单，那么你是否想要来点更复杂的呢？比如，定义一个矩形？有很多方法可以用来定义矩形，不过在OpenGL ES中最典型的办法是使用两个三角形拼接在一起：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/openGL.png&quot; alt=&quot;定义一个矩形&quot;&gt;&lt;/p&gt;
&lt;p&gt;再一次地，我们需要逆时针地为三角形顶点定义坐标来表现这个图形，并将值放入一个&lt;code&gt;ByteBuffer&lt;/code&gt;中。为了避免由两个三角形重合的那条边的顶点被重复定义，可以使用一个绘制列表来告诉OpenGL ES图形处理流程应该如何画这些顶点。下面是代码样例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class Square {

private FloatBuffer vertexBuffer;
private ShortBuffer drawListBuffer;

// number of coordinates per vertex in this array
static final int COORDS_PER_VERTEX = 3;
static float squareCoords[] = {
        -0.5f,  0.5f, 0.0f,   // top left
        -0.5f, -0.5f, 0.0f,   // bottom left
         0.5f, -0.5f, 0.0f,   // bottom right
         0.5f,  0.5f, 0.0f }; // top right

private short drawOrder[] = { 0, 1, 2, 0, 2, 3 }; // order to draw vertices

public Square() {
    // initialize vertex byte buffer for shape coordinates
    ByteBuffer bb = ByteBuffer.allocateDirect(
    // (# of coordinate values * 4 bytes per float)
            squareCoords.length * 4);
    bb.order(ByteOrder.nativeOrder());
    vertexBuffer = bb.asFloatBuffer();
    vertexBuffer.put(squareCoords);
    vertexBuffer.position(0);

    // initialize byte buffer for the draw list
    ByteBuffer dlb = ByteBuffer.allocateDirect(
    // (# of coordinate values * 2 bytes per short)
            drawOrder.length * 2);
    dlb.order(ByteOrder.nativeOrder());
    drawListBuffer = dlb.asShortBuffer();
    drawListBuffer.put(drawOrder);
    drawListBuffer.position(0);
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;该样例可以看作是一个如何使用OpenGL创建复杂图形的启发，通常来说，我们需要使用三角形的集合来绘制对象。在下一节课中，我们将学习如何在屏幕上画这些形状&lt;/p&gt;
&lt;h1 id=&quot;绘制形状&quot;&gt;&lt;a href=&quot;#绘制形状&quot; class=&quot;headerlink&quot; title=&quot;绘制形状&quot;&gt;&lt;/a&gt;绘制形状&lt;/h1&gt;&lt;p&gt;在定义了使用OpenGL绘制的形状之后，你可能希望绘制出它们。使用OpenGL ES 2.0绘制图形可能会比你想象当中更复杂一些，因为API中提供了大量对于图形渲染流程的控制。&lt;/p&gt;
&lt;p&gt;这节课将解释如何使用OpenGL ES 2.0接口画出在上一节课中定义的形状。&lt;/p&gt;
&lt;h2 id=&quot;初始化形状&quot;&gt;&lt;a href=&quot;#初始化形状&quot; class=&quot;headerlink&quot; title=&quot;初始化形状&quot;&gt;&lt;/a&gt;初始化形状&lt;/h2&gt;&lt;p&gt;在你开始绘画之前，你需要初始化并加载你期望绘制的图形。除非你所使用的形状结构（原始坐标）在执行过程中发生了变化，不然的话你应该在渲染器的onSurfaceCreated()方法中初始化它们，这样做是出于内存和执行效率的考量。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class MyGLRenderer implements GLSurfaceView.Renderer {

...
private Triangle mTriangle;
private Square   mSquare;

public void onSurfaceCreated(GL10 unused, EGLConfig config) {
    ...

    // initialize a triangle
    mTriangle = new Triangle();
    // initialize a square
    mSquare = new Square();
}
...
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;画一个形状&quot;&gt;&lt;a href=&quot;#画一个形状&quot; class=&quot;headerlink&quot; title=&quot;画一个形状&quot;&gt;&lt;/a&gt;画一个形状&lt;/h2&gt;&lt;p&gt;使用OpenGL ES 2.0画一个定义好的形状需要较多代码，因为你需要提供很多图形渲染流程的细节。具体而言，你必须定义如下几项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顶点着色器（Vertex Shader）：用来渲染形状顶点的OpenGL ES代码。&lt;/li&gt;
&lt;li&gt;片段着色器（Fragment Shader）：使用颜色或纹理渲染形状表面的OpenGL ES代码。&lt;/li&gt;
&lt;li&gt;程式（Program）：一个OpenGL ES对象，包含了你希望用来绘制一个或更多图形所要用到的着色器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;你需要至少一个顶点着色器来绘制一个形状，以及一个片段着色器为该形状上色。这些着色器必须被编译然后添加到一个OpenGL ES Program当中，并利用它来绘制形状。下面的代码在Triangle类中定义了基本的着色器，我们可以利用它们绘制出一个图形：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class Triangle {

private final String vertexShaderCode =
    &amp;quot;attribute vec4 vPosition;&amp;quot; +
    &amp;quot;void main() {&amp;quot; +
    &amp;quot;  gl_Position = vPosition;&amp;quot; +
    &amp;quot;}&amp;quot;;

private final String fragmentShaderCode =
    &amp;quot;precision mediump float;&amp;quot; +
    &amp;quot;uniform vec4 vColor;&amp;quot; +
    &amp;quot;void main() {&amp;quot; +
    &amp;quot;  gl_FragColor = vColor;&amp;quot; +
    &amp;quot;}&amp;quot;;

...
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;着色器包含了OpenGL Shading Language（GLSL）代码，它必须先被编译然后才能在OpenGL环境中使用。要编译这些代码，需要在你的渲染器类中创建一个辅助方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public static int loadShader(int type, String shaderCode){

// create a vertex shader type (GLES20.GL_VERTEX_SHADER)
// or a fragment shader type (GLES20.GL_FRAGMENT_SHADER)
int shader = GLES20.glCreateShader(type);

// add the source code to the shader and compile it
GLES20.glShaderSource(shader, shaderCode);
GLES20.glCompileShader(shader);

return shader;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为了绘制你的图形，你必须编译着色器代码，将它们添加至一个OpenGL ES Program对象中，然后执行链接。在你的绘制对象的构造函数里做这些事情，这样上述步骤就只用执行一次&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note：编译OpenGL ES着色器及链接操作对于CPU周期和处理时间而言，消耗是巨大的，所以你应该避免重复执行这些事情。如果在执行期间不知道着色器的内容，那么你应该在构建你的应用时，确保它们只被创建了一次，并且缓存以备后续使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;public class Triangle() {
...

private final int mProgram;

public Triangle() {
    ...

    int vertexShader = MyGLRenderer.loadShader(GLES20.GL_VERTEX_SHADER,
                                    vertexShaderCode);
    int fragmentShader = MyGLRenderer.loadShader(GLES20.GL_FRAGMENT_SHADER,
                                    fragmentShaderCode);

    // create empty OpenGL ES Program
    mProgram = GLES20.glCreateProgram();

    // add the vertex shader to program
    GLES20.glAttachShader(mProgram, vertexShader);

    // add the fragment shader to program
    GLES20.glAttachShader(mProgram, fragmentShader);

    // creates OpenGL ES program executables
    GLES20.glLinkProgram(mProgram);
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至此，你已经完全准备好添加实际的调用语句来绘制你的图形了。使用OpenGL ES绘制图形需要你定义一些变量来告诉渲染流程你需要绘制的内容以及如何绘制。既然绘制属性会根据形状的不同而发生变化，把绘制逻辑包含在形状类里面将是一个不错的主意。&lt;/p&gt;
&lt;p&gt;创建一个&lt;code&gt;draw()&lt;/code&gt;方法来绘制图形。下面的代码为形状的顶点着色器和形状着色器设置了位置和颜色值，然后执行绘制函数：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;private int mPositionHandle;
private int mColorHandle;

private final int vertexCount = triangleCoords.length / COORDS_PER_VERTEX;
private final int vertexStride = COORDS_PER_VERTEX * 4; // 4 bytes per vertex

public void draw() {
// Add program to OpenGL ES environment
GLES20.glUseProgram(mProgram);

// get handle to vertex shader&amp;apos;s vPosition member
mPositionHandle = GLES20.glGetAttribLocation(mProgram, &amp;quot;vPosition&amp;quot;);

// Enable a handle to the triangle vertices
GLES20.glEnableVertexAttribArray(mPositionHandle);

// Prepare the triangle coordinate data
GLES20.glVertexAttribPointer(mPositionHandle, COORDS_PER_VERTEX,
                             GLES20.GL_FLOAT, false,
                             vertexStride, vertexBuffer);

// get handle to fragment shader&amp;apos;s vColor member
mColorHandle = GLES20.glGetUniformLocation(mProgram, &amp;quot;vColor&amp;quot;);

// Set color for drawing the triangle
GLES20.glUniform4fv(mColorHandle, 1, color, 0);

// Draw the triangle
GLES20.glDrawArrays(GLES20.GL_TRIANGLES, 0, vertexCount);

// Disable vertex array
GLES20.glDisableVertexAttribArray(mPositionHandle);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一旦你完成了上述所有代码，仅需要在你渲染器的&lt;code&gt;onDrawFrame()&lt;/code&gt;方法中调用&lt;code&gt;draw()&lt;/code&gt;方法就可以画出我们想要画的对象了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public void onDrawFrame(GL10 unused) {
...

mTriangle.draw();
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当你运行这个应用时，它看上去会像是这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/openGL2.png&quot; alt=&quot;openGL2&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这个代码样例中，还存在一些问题。首先，它无法给用户带来什么深刻的印象。其次，这个三角形看上去有一些扁，另外当你改变屏幕方向时，它的形状也会随之改变。发生形变的原因是因为对象的顶点没有根据显示&lt;code&gt;GLSurfaceView&lt;/code&gt;的屏幕区域的长宽比进行修正。你可以在下一节课中使用投影（Projection）或者相机视角（Camera View）来解决这个问题。&lt;/p&gt;
&lt;p&gt;最后，这个三角形是静止的，这看上去有些无聊。在添加移动课程当中（后续课程），你会让这个形状发生旋转，并使用一些OpenGL ES图形处理流程中更加新奇的用法。&lt;/p&gt;
&lt;h1 id=&quot;运用投影与相机视角&quot;&gt;&lt;a href=&quot;#运用投影与相机视角&quot; class=&quot;headerlink&quot; title=&quot;运用投影与相机视角&quot;&gt;&lt;/a&gt;运用投影与相机视角&lt;/h1&gt;&lt;p&gt;在OpenGL ES环境中，利用投影和相机视角可以让显示的绘图对象更加酷似于我们用肉眼看到的真实物体。该物理视角的仿真是对绘制对象坐标的进行数学变换实现的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;投影（Projection）：这个变换会基于显示它们的&lt;code&gt;GLSurfaceView&lt;/code&gt;的长和宽，来调整绘图对象的坐标。如果没有该计算，那么用OpenGL ES绘制的对象会由于其长宽比例和View窗口比例的不一致而发生形变。一个投影变换一般仅当OpenGL View的比例在渲染器的&lt;code&gt;onSurfaceChanged()&lt;/code&gt;方法中建立或发生变化时才被计算。关于更多OpenGL ES投影和坐标映射的知识，可以阅读&lt;a href=&quot;http://developer.android.com/guide/topics/graphics/opengl.html#coordinate-mapping&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mapping Coordinates for Drawn Objects&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;相机视角（Camera View）：这个变换会基于一个虚拟相机位置改变绘图对象的坐标。注意到OpenGL ES并没有定义一个实际的相机对象，取而代之的，它提供了一些辅助方法，通过对绘图对象的变换来模拟相机视角。一个相机视角变换可能仅在建立你的&lt;code&gt;GLSurfaceView&lt;/code&gt;时计算一次，也可能根据用户的行为或者你的应用的功能进行动态调整。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这节课将解释如何创建一个投影和一个相机视角，并应用它们到&lt;code&gt;GLSurfaceView&lt;/code&gt;中的绘制图像上。&lt;/p&gt;
&lt;h2 id=&quot;定义一个投影&quot;&gt;&lt;a href=&quot;#定义一个投影&quot; class=&quot;headerlink&quot; title=&quot;定义一个投影&quot;&gt;&lt;/a&gt;定义一个投影&lt;/h2&gt;&lt;p&gt;投影变换的数据会在&lt;code&gt;GLSurfaceView.Renderer&lt;/code&gt;类的&lt;code&gt;onSurfaceChanged()&lt;/code&gt;方法中被计算。下面的代码首先接收&lt;code&gt;GLSurfaceView&lt;/code&gt;的高和宽，然后利用它并使用&lt;code&gt;Matrix.frustumM()&lt;/code&gt;方法来填充一个投影变换矩阵（Projection Transformation Matrix）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// mMVPMatrix is an abbreviation for &amp;quot;Model View Projection Matrix&amp;quot;
private final float[] mMVPMatrix = new float[16];
private final float[] mProjectionMatrix = new float[16];
private final float[] mViewMatrix = new float[16];

@Override
public void onSurfaceChanged(GL10 unused, int width, int height) {
GLES20.glViewport(0, 0, width, height);

float ratio = (float) width / height;

// this projection matrix is applied to object coordinates
// in the onDrawFrame() method
Matrix.frustumM(mProjectionMatrix, 0, -ratio, ratio, -1, 1, 3, 7);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;该代码填充了一个投影矩阵：&lt;code&gt;mProjectionMatrix&lt;/code&gt;，在下一节中，我们可以在&lt;code&gt;onDrawFrame()&lt;/code&gt;方法中将它和一个相机视角变换结合起来。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note：在绘图对象上只应用一个投影变换会导致显示效果看上去很空旷。一般而言，我们还要实现一个相机视角，使得所有对象出现在屏幕上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;定义一个相机视角&quot;&gt;&lt;a href=&quot;#定义一个相机视角&quot; class=&quot;headerlink&quot; title=&quot;定义一个相机视角&quot;&gt;&lt;/a&gt;定义一个相机视角&lt;/h2&gt;&lt;p&gt;在渲染器中添加一个相机视角变换作为绘图过程的一部分，以此完成我们的绘图对象所需变换的所有步骤。在下面的代码中，使用&lt;code&gt;Matrix.setLookAtM()&lt;/code&gt;方法来计算相机视角变换，然后与之前计算的投影矩阵结合起来，结合后的变换矩阵传递给绘制图像：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@Override
public void onDrawFrame(GL10 unused) {
...
// Set the camera position (View matrix)
Matrix.setLookAtM(mViewMatrix, 0, 0, 0, -3, 0f, 0f, 0f, 0f, 1.0f, 0.0f);

// Calculate the projection and view transformation
Matrix.multiplyMM(mMVPMatrix, 0, mProjectionMatrix, 0, mViewMatrix, 0);

// Draw shape
mTriangle.draw(mMVPMatrix);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;应用投影和相机变换&quot;&gt;&lt;a href=&quot;#应用投影和相机变换&quot; class=&quot;headerlink&quot; title=&quot;应用投影和相机变换&quot;&gt;&lt;/a&gt;应用投影和相机变换&lt;/h2&gt;&lt;p&gt;为了使用在之前章节中结合了的相机视角变换和投影变换，我们首先为之前在Triangle类中定义的顶点着色器添加一个Matrix变量：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class Triangle {

private final String vertexShaderCode =
    // This matrix member variable provides a hook to manipulate
    // the coordinates of the objects that use this vertex shader
    &amp;quot;uniform mat4 uMVPMatrix;&amp;quot; +
    &amp;quot;attribute vec4 vPosition;&amp;quot; +
    &amp;quot;void main() {&amp;quot; +
    // the matrix must be included as a modifier of gl_Position
    // Note that the uMVPMatrix factor *must be first* in order
    // for the matrix multiplication product to be correct.
    &amp;quot;  gl_Position = uMVPMatrix * vPosition;&amp;quot; +
    &amp;quot;}&amp;quot;;

// Use to access and set the view transformation
private int mMVPMatrixHandle;

...
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后，修改图形对象的&lt;code&gt;draw()&lt;/code&gt;方法，使得它接收组合后的变换矩阵，并将它应用到图形上：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public void draw(float[] mvpMatrix) { // pass in the calculated transformation matrix
...

// get handle to shape&amp;apos;s transformation matrix
mMVPMatrixHandle = GLES20.glGetUniformLocation(mProgram, &amp;quot;uMVPMatrix&amp;quot;);

// Pass the projection and view transformation to the shader
GLES20.glUniformMatrix4fv(mMVPMatrixHandle, 1, false, mvpMatrix, 0);

// Draw the triangle
GLES20.glDrawArrays(GLES20.GL_TRIANGLES, 0, vertexCount);

// Disable vertex array
GLES20.glDisableVertexAttribArray(mPositionHandle);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一旦我们正确地计算并应用了投影变换和相机视角变换，我们的图形就会以正确的比例绘制出来，它看上去会像是这样:&lt;br&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/OpenGL3.png&quot; alt=&quot;OPENGL3&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在，应用已经可以通过正确的比例显示图形了，下面就为图形添加一些动画效果吧！&lt;/p&gt;
&lt;h1 id=&quot;添加移动&quot;&gt;&lt;a href=&quot;#添加移动&quot; class=&quot;headerlink&quot; title=&quot;添加移动&quot;&gt;&lt;/a&gt;添加移动&lt;/h1&gt;&lt;p&gt;在屏幕上绘制图形是OpenGL的一个基本特性，当然我们也可以通过其它的Android图形框架类做这些事情，包括&lt;code&gt;Canvas&lt;/code&gt;和&lt;code&gt;Drawable&lt;/code&gt;对象。OpenGL ES的特别之处在于，它还提供了其它的一些功能，比如在三维空间中对绘制图形进行移动和变换操作，或者通过其它独有的方法创建出引人入胜的用户体验。&lt;/p&gt;
&lt;p&gt;在这节课中，我们会更深入地学习OpenGL ES的知识：对一个图形添加旋转动画。&lt;/p&gt;
&lt;h2 id=&quot;旋转一个形状&quot;&gt;&lt;a href=&quot;#旋转一个形状&quot; class=&quot;headerlink&quot; title=&quot;旋转一个形状&quot;&gt;&lt;/a&gt;旋转一个形状&lt;/h2&gt;&lt;p&gt;使用OpenGL ES 2.0 旋转一个绘制图形是比较简单的。在渲染器中，创建另一个变换矩阵（一个旋转矩阵），并且将它和我们的投影变换矩阵以及相机视角变换矩阵结合在一起：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;private float[] mRotationMatrix = new float[16];
public void onDrawFrame(GL10 gl) {
float[] scratch = new float[16];

...

// Create a rotation transformation for the triangle
long time = SystemClock.uptimeMillis() % 4000L;
float angle = 0.090f * ((int) time);
Matrix.setRotateM(mRotationMatrix, 0, angle, 0, 0, -1.0f);

// Combine the rotation matrix with the projection and camera view
// Note that the mMVPMatrix factor *must be first* in order
// for the matrix multiplication product to be correct.
Matrix.multiplyMM(scratch, 0, mMVPMatrix, 0, mRotationMatrix, 0);

// Draw triangle
mTriangle.draw(scratch);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果完成了这些变更以后，你的三角形还是没有旋转的话，确认一下你是否将启用&lt;code&gt;GLSurfaceView.RENDERMODE_WHEN_DIRTY&lt;/code&gt;的这一配置所对应的代码注释掉了，有关该方面的知识会在下一节中展开。&lt;/p&gt;
&lt;h2 id=&quot;启用连续渲染&quot;&gt;&lt;a href=&quot;#启用连续渲染&quot; class=&quot;headerlink&quot; title=&quot;启用连续渲染&quot;&gt;&lt;/a&gt;启用连续渲染&lt;/h2&gt;&lt;p&gt;如果严格按照这节课的样例代码走到了现在这一步，那么请确认一下是否将设置渲染模式为&lt;code&gt;RENDERMODE_WHEN_DIRTY&lt;/code&gt;的那行代码注释了，不然的话OpenGL只会对这个形状执行一次旋转，然后就等待&lt;code&gt;GLSurfaceView&lt;/code&gt;容器的&lt;code&gt;requestRender()&lt;/code&gt;方法被调用后才会继续执行渲染操作。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public MyGLSurfaceView(Context context) {
...
// Render the view only when there is a change in the drawing data.
// To allow the triangle to rotate automatically, this line is commented out:
//setRenderMode(GLSurfaceView.RENDERMODE_WHEN_DIRTY);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;除非某个对象，它的变化和用户的交互无关，不然的话一般还是建议将这个配置打开。在下一节课中的内容将会把这个注释放开，再次设定这一配置选项。&lt;/p&gt;
&lt;h1 id=&quot;响应触摸事件&quot;&gt;&lt;a href=&quot;#响应触摸事件&quot; class=&quot;headerlink&quot; title=&quot;响应触摸事件&quot;&gt;&lt;/a&gt;响应触摸事件&lt;/h1&gt;&lt;p&gt;让对象根据预设的程序运动（如让一个三角形旋转），可以有效地引起用户的注意，但是如果希望让OpenGL ES的图形对象与用户交互呢？让我们的OpenGL ES应用可以支持触控交互的关键点在于，拓展&lt;code&gt;GLSurfaceView&lt;/code&gt;的实现，重写&lt;code&gt;onTouchEvent()&lt;/code&gt;方法来监听触摸事件。&lt;/p&gt;
&lt;p&gt;这节课将会向你展示如何监听触控事件，让用户旋转一个OpenGL ES对象。&lt;/p&gt;
&lt;h2 id=&quot;配置触摸监听器&quot;&gt;&lt;a href=&quot;#配置触摸监听器&quot; class=&quot;headerlink&quot; title=&quot;配置触摸监听器&quot;&gt;&lt;/a&gt;配置触摸监听器&lt;/h2&gt;&lt;p&gt;为了让我们的OpenGL ES应用响应触控事件，我们必须实现&lt;code&gt;GLSurfaceView&lt;/code&gt;类中的&lt;code&gt;onTouchEvent()&lt;/code&gt;方法。下面的例子展示了如何监听&lt;code&gt;MotionEvent.ACTION_MOVE&lt;/code&gt;事件，并将事件转换为形状旋转的角度：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;private final float TOUCH_SCALE_FACTOR = 180.0f / 320;
private float mPreviousX;
private float mPreviousY;

@Override
public boolean onTouchEvent(MotionEvent e) {
// MotionEvent reports input details from the touch screen
// and other input controls. In this case, you are only
// interested in events where the touch position changed.

float x = e.getX();
float y = e.getY();

switch (e.getAction()) {
    case MotionEvent.ACTION_MOVE:

        float dx = x - mPreviousX;
        float dy = y - mPreviousY;

        // reverse direction of rotation above the mid-line
        if (y &amp;gt; getHeight() / 2) {
          dx = dx * -1 ;
        }

        // reverse direction of rotation to left of the mid-line
        if (x &amp;lt; getWidth() / 2) {
          dy = dy * -1 ;
        }

        mRenderer.setAngle(
                mRenderer.getAngle() +
                ((dx + dy) * TOUCH_SCALE_FACTOR));
        requestRender();
}
mPreviousX = x;
mPreviousY = y;
return true;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意在计算旋转角度后，该方法会调用&lt;code&gt;requestRender()&lt;/code&gt;来告诉渲染器现在可以进行渲染了。这种办法对于这个例子来说是最有效的，因为图形并不需要重新绘制，除非有一个旋转角度的变化。当然，为了能够真正实现执行效率的提高，记得使用&lt;code&gt;setRenderMode()&lt;/code&gt;方法以保证渲染器仅在数据发生变化时才会重新绘制图形，所以请确保这一行代码没有被注释掉：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public MyGLSurfaceView(Context context) {
...
// Render the view only when there is a change in the drawing data
setRenderMode(GLSurfaceView.RENDERMODE_WHEN_DIRTY);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;公开旋转角度&quot;&gt;&lt;a href=&quot;#公开旋转角度&quot; class=&quot;headerlink&quot; title=&quot;公开旋转角度&quot;&gt;&lt;/a&gt;公开旋转角度&lt;/h2&gt;&lt;p&gt;上述样例代码需要我们公开旋转的角度，具体来说，是在渲染器中添加一个&lt;code&gt;public&lt;/code&gt;成员变量。由于渲染器代码运行在一个独立的线程中（非主UI线程），我们必须同时将该变量声明为volatile。注意下面声明该变量的代码，另外对应的get和set方法也被声明为了&lt;code&gt;public&lt;/code&gt;成员函数：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class MyGLRenderer implements GLSurfaceView.Renderer {
...

public volatile float mAngle;

public float getAngle() {
    return mAngle;
}

public void setAngle(float angle) {
    mAngle = angle;
}
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;应用旋转&quot;&gt;&lt;a href=&quot;#应用旋转&quot; class=&quot;headerlink&quot; title=&quot;应用旋转&quot;&gt;&lt;/a&gt;应用旋转&lt;/h2&gt;&lt;p&gt;为了应用触控输入所生成的旋转，注释掉创建旋转角度的代码，然后添加mAngle，该变量包含了触控输入所生成的角度：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public void onDrawFrame(GL10 gl) {
...
float[] scratch = new float[16];

// Create a rotation for the triangle
// long time = SystemClock.uptimeMillis() % 4000L;
// float angle = 0.090f * ((int) time);
Matrix.setRotateM(mRotationMatrix, 0, mAngle, 0, 0, -1.0f);

// Combine the rotation matrix with the projection and camera view
// Note that the mMVPMatrix factor *must be first* in order
// for the matrix multiplication product to be correct.
Matrix.multiplyMM(scratch, 0, mMVPMatrix, 0, mRotationMatrix, 0);

// Draw triangle
mTriangle.draw(scratch);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当完成了上述步骤，我们就可以运行这个程序，并通过手指在屏幕上的滑动旋转三角形了：&lt;br&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/opengl4.png&quot; alt=&quot;opengl4&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/android-training-geek/opengl-index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;转载&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;h
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="Android" scheme="http://jackliu17.github.io/tags/Android/"/>
    
      <category term="openGL_ES" scheme="http://jackliu17.github.io/tags/openGL-ES/"/>
    
      <category term="Android_API_Guides" scheme="http://jackliu17.github.io/tags/Android-API-Guides/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL_ES</title>
    <link href="http://jackliu17.github.io/2016/04/24/OpenGL-ES/"/>
    <id>http://jackliu17.github.io/2016/04/24/OpenGL-ES/</id>
    <published>2016-04-24T06:43:39.000Z</published>
    <updated>2016-04-24T06:57:33.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;OpenGL 是跨平台的图像API，定义了3D图像处理的标准&lt;/li&gt;
&lt;li&gt;OpenGL ES是为OPenGL在嵌入式设备上的标准&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安卓支持如下OpenGL&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OpenGL ES 1.0 and 1.1 - This API specification is supported by Android 1.0 and higher.&lt;/li&gt;
&lt;li&gt;OpenGL ES 2.0 - This API specification is supported by Android 2.2 (API level 8) and higher.&lt;/li&gt;
&lt;li&gt;OpenGL ES 3.0 - This API specification is supported by Android 4.3 (API level 18) and higher.&lt;/li&gt;
&lt;li&gt;OpenGL ES 3.1 - This API specification is supported by Android 5.0 (API level 21) and higher.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OpenGL ES 3.0以上需要厂家在设备上安装某图像处理，Android4.3以上可能不支持OpenGL ES 3.0&lt;/p&gt;
&lt;h2 id=&quot;The-Basics&quot;&gt;&lt;a href=&quot;#The-Basics&quot; class=&quot;headerlink&quot; title=&quot;The Basics&quot;&gt;&lt;/a&gt;The Basics&lt;/h2&gt;&lt;p&gt;Android中两个class需要特别注意&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GLSurfaceView&lt;/code&gt;&lt;br&gt;这是一个view,用来绘画和管理对象，和SurfaceView很相似&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GLSurfaceView.Renderer&lt;/code&gt;&lt;br&gt;在GLSurfaceView中绘画的接口，提供了必要的方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;onSurfaceCreated():  //初始化环境&lt;/li&gt;
&lt;li&gt;onDrawFrame(): //绘画对象&lt;/li&gt;
&lt;li&gt;onSurfaceChanged(): //当界面改变时，比如屏幕旋转&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;OpenGL-ES-packages&quot;&gt;&lt;a href=&quot;#OpenGL-ES-packages&quot; class=&quot;headerlink&quot; title=&quot;OpenGL ES packages&quot;&gt;&lt;/a&gt;OpenGL ES packages&lt;/h3&gt;&lt;p&gt;OpenGL ES 1.0/1.1 API Packages&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;android.opengl
javax.microedition.khronos.opengles
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;OpenGL ES 2.0 API Class&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;android.opengl.GLES20
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;OpenGL ES 3.0/3.1 API Packages&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;android.opengl
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;Declaring-OpenGL-Requirements&quot;&gt;&lt;a href=&quot;#Declaring-OpenGL-Requirements&quot; class=&quot;headerlink&quot; title=&quot;Declaring OpenGL Requirements&quot;&gt;&lt;/a&gt;Declaring OpenGL Requirements&lt;/h2&gt;&lt;p&gt;在AndroidManifest.xml中声明OpenGL版本要求&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;For OpenGL ES 2.0:
&amp;lt;!-- Tell the system this app requires OpenGL ES 2.0. --&amp;gt;
&amp;lt;uses-feature android:glEsVersion=&amp;quot;0x00020000&amp;quot; android:required=&amp;quot;true&amp;quot; /&amp;gt;

For OpenGL ES 3.0:
&amp;lt;!-- Tell the system this app requires OpenGL ES 3.0. --&amp;gt;
&amp;lt;uses-feature android:glEsVersion=&amp;quot;0x00030000&amp;quot; android:required=&amp;quot;true&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;纹理压缩要求 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;supports-gl-texture&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;Mapping-Coordinates-for-Drawn-Objects&quot;&gt;&lt;a href=&quot;#Mapping-Coordinates-for-Drawn-Objects&quot; class=&quot;headerlink&quot; title=&quot;Mapping Coordinates for Drawn Objects&quot;&gt;&lt;/a&gt;Mapping Coordinates for Drawn Objects&lt;/h2&gt;&lt;h2 id=&quot;Shape-Faces-and-Winding&quot;&gt;&lt;a href=&quot;#Shape-Faces-and-Winding&quot; class=&quot;headerlink&quot; title=&quot;Shape Faces and Winding&quot;&gt;&lt;/a&gt;Shape Faces and Winding&lt;/h2&gt;&lt;h2 id=&quot;OpenGL-Versions-and-Device-Compatibility&quot;&gt;&lt;a href=&quot;#OpenGL-Versions-and-Device-Compatibility&quot; class=&quot;headerlink&quot; title=&quot;OpenGL Versions and Device Compatibility&quot;&gt;&lt;/a&gt;OpenGL Versions and Device Compatibility&lt;/h2&gt;&lt;h2 id=&quot;Choosing-an-OpenGL-API-Version&quot;&gt;&lt;a href=&quot;#Choosing-an-OpenGL-API-Version&quot; class=&quot;headerlink&quot; title=&quot;Choosing an OpenGL API Version&quot;&gt;&lt;/a&gt;Choosing an OpenGL API Version&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://developer.android.com/guide/topics/graphics/opengl.html#choosing-version&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Abstract from Android API Guides - OpenGL&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;OpenGL 是跨平台的图像API，定义了3D图像处理的标准&lt;/li&gt;
&lt;li&gt;OpenGL ES是为OPenGL在嵌入式设备上的标准&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安卓支持如下OpenGL&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OpenGL ES 1.0 and 1.1 -
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="Android" scheme="http://jackliu17.github.io/tags/Android/"/>
    
      <category term="openGL_ES" scheme="http://jackliu17.github.io/tags/openGL-ES/"/>
    
      <category term="Android_API_Guides" scheme="http://jackliu17.github.io/tags/Android-API-Guides/"/>
    
  </entry>
  
  <entry>
    <title>iOS项目5.UIScrollView图片自动滚动</title>
    <link href="http://jackliu17.github.io/2016/04/22/iOS%E9%A1%B9%E7%9B%AE5-UIScrollView%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E6%BB%9A%E5%8A%A8/"/>
    <id>http://jackliu17.github.io/2016/04/22/iOS项目5-UIScrollView图片自动滚动/</id>
    <published>2016-04-22T01:13:06.000Z</published>
    <updated>2016-04-22T01:18:34.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/uiscrollViewPlay.png&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;功能分析&quot;&gt;&lt;a href=&quot;#功能分析&quot; class=&quot;headerlink&quot; title=&quot;功能分析&quot;&gt;&lt;/a&gt;功能分析&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E6%92%AD%E6%94%BE%E5%8A%9F%E8%83%BD%E5%88%86%E6%9E%90.png&quot; alt=&quot;功能分析&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目架构1&quot;&gt;&lt;a href=&quot;#项目架构1&quot; class=&quot;headerlink&quot; title=&quot;项目架构1&quot;&gt;&lt;/a&gt;项目架构1&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E6%92%AD%E6%94%BE1.png&quot; alt=&quot;项目架构1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目架构2&quot;&gt;&lt;a href=&quot;#项目架构2&quot; class=&quot;headerlink&quot; title=&quot;项目架构2&quot;&gt;&lt;/a&gt;项目架构2&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E6%92%AD%E6%94%BE2.png&quot; alt=&quot;项目架构2&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/uiscrollViewPlay.p
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="codeExample" scheme="http://jackliu17.github.io/tags/codeExample/"/>
    
  </entry>
  
  <entry>
    <title>iOS项目5.UIPickerView国家选择</title>
    <link href="http://jackliu17.github.io/2016/04/20/iOS%E9%A1%B9%E7%9B%AE5-UIPickerView%E5%9B%BD%E5%AE%B6%E9%80%89%E6%8B%A9/"/>
    <id>http://jackliu17.github.io/2016/04/20/iOS项目5-UIPickerView国家选择/</id>
    <published>2016-04-20T07:14:27.000Z</published>
    <updated>2016-04-20T07:16:53.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9B%BD%E5%AE%B6%E9%80%89%E6%8B%A9.png&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目架构&quot;&gt;&lt;a href=&quot;#项目架构&quot; class=&quot;headerlink&quot; title=&quot;项目架构&quot;&gt;&lt;/a&gt;项目架构&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9B%BD%E5%AE%B6%E9%80%89%E6%8B%A92.png&quot; alt=&quot;项目架构&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;设置xib&quot;&gt;&lt;a href=&quot;#设置xib&quot; class=&quot;headerlink&quot; title=&quot;设置xib&quot;&gt;&lt;/a&gt;设置xib&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/UIPickerViewDataSource.png&quot; alt=&quot;设置xib&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9B%BD%E5%AE%B6
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="codeExample" scheme="http://jackliu17.github.io/tags/codeExample/"/>
    
  </entry>
  
  <entry>
    <title>iOS项目4.应用程序管理</title>
    <link href="http://jackliu17.github.io/2016/04/20/iOS%E9%A1%B9%E7%9B%AE4-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%AE%A1%E7%90%86/"/>
    <id>http://jackliu17.github.io/2016/04/20/iOS项目4-应用程序管理/</id>
    <published>2016-04-20T02:07:50.000Z</published>
    <updated>2016-04-20T07:12:11.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%AE%A1%E7%90%86.png&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;功能分析&quot;&gt;&lt;a href=&quot;#功能分析&quot; class=&quot;headerlink&quot; title=&quot;功能分析&quot;&gt;&lt;/a&gt;功能分析&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%AE%A1%E7%90%86%E5%8A%9F%E8%83%BD%E5%88%86%E6%9E%90.png&quot; alt=&quot;功能分析&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目结构1&quot;&gt;&lt;a href=&quot;#项目结构1&quot; class=&quot;headerlink&quot; title=&quot;项目结构1&quot;&gt;&lt;/a&gt;项目结构1&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%AE%A1%E7%90%861.png&quot; alt=&quot;项目结构1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目结构2&quot;&gt;&lt;a href=&quot;#项目结构2&quot; class=&quot;headerlink&quot; title=&quot;项目结构2&quot;&gt;&lt;/a&gt;项目结构2&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%AE%A1%E7%90%862.png&quot; alt=&quot;项目结构2&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目结构3&quot;&gt;&lt;a href=&quot;#项目结构3&quot; class=&quot;headerlink&quot; title=&quot;项目结构3&quot;&gt;&lt;/a&gt;项目结构3&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%AE%A1%E7%90%863.png&quot; alt=&quot;项目结构3&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;设置xib为freeform&quot;&gt;&lt;a href=&quot;#设置xib为freeform&quot; class=&quot;headerlink&quot; title=&quot;设置xib为freeform&quot;&gt;&lt;/a&gt;设置xib为freeform&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/freeForm.png&quot; alt=&quot;设置xib为freeform&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%BA%94%E7%94%A8
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="codeExample" scheme="http://jackliu17.github.io/tags/codeExample/"/>
    
  </entry>
  
  <entry>
    <title>iOS项目3.英雄图片表视图展示</title>
    <link href="http://jackliu17.github.io/2016/04/18/iOS%E9%A1%B9%E7%9B%AE3-%E8%8B%B1%E9%9B%84%E5%9B%BE%E7%89%87%E8%A1%A8%E8%A7%86%E5%9B%BE%E5%B1%95%E7%A4%BA/"/>
    <id>http://jackliu17.github.io/2016/04/18/iOS项目3-英雄图片表视图展示/</id>
    <published>2016-04-18T07:40:30.000Z</published>
    <updated>2016-04-20T07:11:01.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E8%8B%B1%E9%9B%84%E5%B1%95%E7%A4%BA%E7%BC%A9%E5%B0%8F%E7%89%88.png&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目结构&quot;&gt;&lt;a href=&quot;#项目结构&quot; class=&quot;headerlink&quot; title=&quot;项目结构&quot;&gt;&lt;/a&gt;项目结构&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E8%8B%B1%E9%9B%84%E5%9B%BE%E7%89%87%E8%A1%A8%E8%A7%86%E5%9B%BE%E5%B1%95%E7%A4%BA.png&quot; alt=&quot;项目结构&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;TableView的设置&quot;&gt;&lt;a href=&quot;#TableView的设置&quot; class=&quot;headerlink&quot; title=&quot;TableView的设置&quot;&gt;&lt;/a&gt;TableView的设置&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/tableViewDelegate.png&quot; alt=&quot;TableView的设置&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E8%8B%B1%E9%9B%84
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="codeExample" scheme="http://jackliu17.github.io/tags/codeExample/"/>
    
  </entry>
  
  <entry>
    <title>iOS项目2.图片浏览器</title>
    <link href="http://jackliu17.github.io/2016/04/18/iOS%E9%A1%B9%E7%9B%AE2-%E5%9B%BE%E7%89%87%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    <id>http://jackliu17.github.io/2016/04/18/iOS项目2-图片浏览器/</id>
    <published>2016-04-18T05:57:39.000Z</published>
    <updated>2016-04-20T07:10:05.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA.png&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目结构&quot;&gt;&lt;a href=&quot;#项目结构&quot; class=&quot;headerlink&quot; title=&quot;项目结构&quot;&gt;&lt;/a&gt;项目结构&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9B%BE%E7%89%87%E6%B5%8F%E8%A7%88%E5%99%A8.png&quot; alt=&quot;project structure&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;UIButton-配置&quot;&gt;&lt;a href=&quot;#UIButton-配置&quot; class=&quot;headerlink&quot; title=&quot;UIButton 配置&quot;&gt;&lt;/a&gt;UIButton 配置&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/button_image.png&quot; alt=&quot;button_image&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9B%BE%E7%89%87
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="codeExample" scheme="http://jackliu17.github.io/tags/codeExample/"/>
    
  </entry>
  
  <entry>
    <title>iOS项目1.加法计算器</title>
    <link href="http://jackliu17.github.io/2016/04/18/iOS%E9%A1%B9%E7%9B%AE1-%E5%8A%A0%E6%B3%95%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <id>http://jackliu17.github.io/2016/04/18/iOS项目1-加法计算器/</id>
    <published>2016-04-18T01:31:59.000Z</published>
    <updated>2016-04-20T07:08:19.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%8A%A0%E6%B3%95%E8%AE%A1%E7%AE%97%E5%99%A8.png&quot; alt=&quot;加法计算器1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;项目结构&quot;&gt;&lt;a href=&quot;#项目结构&quot; class=&quot;headerlink&quot; title=&quot;项目结构&quot;&gt;&lt;/a&gt;项目结构&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%8A%A0%E6%B3%95%E8%AE%A1%E7%AE%97%E5%99%A82.png&quot; alt=&quot;加法计算器2&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%8A%A0%E6%B3%95
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="codeExample" scheme="http://jackliu17.github.io/tags/codeExample/"/>
    
  </entry>
  
  <entry>
    <title>4月12日之夜梦</title>
    <link href="http://jackliu17.github.io/2016/04/12/4%E6%9C%8812%E6%97%A5%E4%B9%8B%E5%A4%9C%E6%A2%A6/"/>
    <id>http://jackliu17.github.io/2016/04/12/4月12日之夜梦/</id>
    <published>2016-04-12T00:53:22.000Z</published>
    <updated>2016-04-12T01:21:03.000Z</updated>
    
    <content type="html">&lt;p&gt;昨夜梦见D君了。&lt;/p&gt;
&lt;p&gt;他是多年前的朋友。一晃眼就14年了。那时我大学刚毕业，懵懂的来到广州找工作，托这个破专业的福，我误打误撞的进入了这个连锁餐厅当见习经理。他也是，只不过比我早点进去而已。那段日子，每日起早贪黑的在厨房忙碌着，期间多少心酸的感受，以后再找机会写吧。记得2003年新年除夕的那一天，结束了单位的庆祝活动后，从餐厅出来，我们俩坐在惠福西路寺庙前的石墩上，仰望星空，探究着自己不可测的未来。那一幕，那一满夜空的星星，时至今日，依然记忆犹新。&lt;/p&gt;
&lt;p&gt;长话短说，先把昨天的梦记录完，有时间再写当年的往事吧。&lt;/p&gt;
&lt;p&gt;昨夜梦见他在自己创业的小店里，给我做饭，为了煎一条鱼，花了五十多分钟。我笑着对他说：这也太慢了，顾客都等急了。然后我又搬出了自己自以为擅长的市场分析理论，“来快餐店吃饭的顾客有两种，第一是要赶时间的，第二是慢吞吞吃饭的，你们的店只能招待第二类顾客了”。他的店里能提供很多各式各样的广式煲汤，我一直很好奇，这库存怎么管理，如果每天做了很多汤，又吃不完卖不掉呢？&lt;/p&gt;
&lt;p&gt;他在现实中创业了，在沉淀了十多年的餐饮行业开始了扬帆前行。真羡慕，祝福他，也勉励自己。&lt;/p&gt;
&lt;p&gt;最近老是做一些梦，想起很多人很多事。也许我们怀念一个人，更确切的是，通过他来怀念自己的过去吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;昨夜梦见D君了。&lt;/p&gt;
&lt;p&gt;他是多年前的朋友。一晃眼就14年了。那时我大学刚毕业，懵懂的来到广州找工作，托这个破专业的福，我误打误撞的进入了这个连锁餐厅当见习经理。他也是，只不过比我早点进去而已。那段日子，每日起早贪黑的在厨房忙碌着，期间多少心酸的感受，以后再找机会写吧
    
    </summary>
    
      <category term="情感杂谈" scheme="http://jackliu17.github.io/categories/%E6%83%85%E6%84%9F%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS实例-通讯录</title>
    <link href="http://jackliu17.github.io/2016/03/26/iOS%E5%AE%9E%E4%BE%8B-%E9%80%9A%E8%AE%AF%E5%BD%95/"/>
    <id>http://jackliu17.github.io/2016/03/26/iOS实例-通讯录/</id>
    <published>2016-03-26T06:59:29.000Z</published>
    <updated>2016-03-26T07:02:39.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;视图&quot;&gt;&lt;a href=&quot;#视图&quot; class=&quot;headerlink&quot; title=&quot;视图&quot;&gt;&lt;/a&gt;视图&lt;/h2&gt;&lt;h3 id=&quot;创建新的navigation视图&quot;&gt;&lt;a href=&quot;#创建新的navigation视图&quot; class=&quot;headerlink&quot; title=&quot;创建新的navigation视图&quot;&gt;&lt;/a&gt;创建新的navigation视图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/new_navigation_controller.png&quot; alt=&quot;new navigation&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建新的rootViewController&quot;&gt;&lt;a href=&quot;#创建新的rootViewController&quot; class=&quot;headerlink&quot; title=&quot;创建新的rootViewController&quot;&gt;&lt;/a&gt;创建新的rootViewController&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/new_root_controller.png&quot; alt=&quot;new root view controller&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;导航视图顶部标题及按钮的设置&quot;&gt;&lt;a href=&quot;#导航视图顶部标题及按钮的设置&quot; class=&quot;headerlink&quot; title=&quot;导航视图顶部标题及按钮的设置&quot;&gt;&lt;/a&gt;导航视图顶部标题及按钮的设置&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/custom_bar_button_item.png&quot; alt=&quot;自定义标题栏&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;登录后视跳转视图&quot;&gt;&lt;a href=&quot;#登录后视跳转视图&quot; class=&quot;headerlink&quot; title=&quot;登录后视跳转视图&quot;&gt;&lt;/a&gt;登录后视跳转视图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E7%99%BB%E5%BD%95%E5%90%8E%E6%89%8D%E5%87%BA%E7%8E%B0%E7%9A%84%E9%A1%B5%E9%9D%A2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;UITableView-Cell-跳转到新视图&quot;&gt;&lt;a href=&quot;#UITableView-Cell-跳转到新视图&quot; class=&quot;headerlink&quot; title=&quot;UITableView Cell 跳转到新视图&quot;&gt;&lt;/a&gt;UITableView Cell 跳转到新视图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/tableViewCell.png&quot; alt=&quot;UITableView Cell&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;UI-element&quot;&gt;&lt;a href=&quot;#UI-element&quot; class=&quot;headerlink&quot; title=&quot;UI element&quot;&gt;&lt;/a&gt;UI element&lt;/h2&gt;&lt;h2 id=&quot;UIBarbutton的属性配置&quot;&gt;&lt;a href=&quot;#UIBarbutton的属性配置&quot; class=&quot;headerlink&quot; title=&quot;UIBarbutton的属性配置&quot;&gt;&lt;/a&gt;UIBarbutton的属性配置&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/Bar_button_item__.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;UITextfield的属性配置&quot;&gt;&lt;a href=&quot;#UITextfield的属性配置&quot; class=&quot;headerlink&quot; title=&quot;UITextfield的属性配置&quot;&gt;&lt;/a&gt;UITextfield的属性配置&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/TextField.png&quot; alt=&quot;TextField&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;UIButton的属性配置&quot;&gt;&lt;a href=&quot;#UIButton的属性配置&quot; class=&quot;headerlink&quot; title=&quot;UIButton的属性配置&quot;&gt;&lt;/a&gt;UIButton的属性配置&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/UIButton.png&quot; alt=&quot;UIButton&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;如何在xcode里正确的建立文件夹？&quot;&gt;&lt;a href=&quot;#如何在xcode里正确的建立文件夹？&quot; class=&quot;headerlink&quot; title=&quot;如何在xcode里正确的建立文件夹？&quot;&gt;&lt;/a&gt;如何在xcode里正确的建立文件夹？&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;如果仅是在xcode里创建，那文件夹不会在存在finder里，实际上相关文件还是存在一个目录下&lt;/li&gt;
&lt;li&gt;需要在Xcode里左下角，”add new file to ….project” –&amp;gt; create new folder –&amp;gt; add,这样创建的文件夹可以存在finder里&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;视图&quot;&gt;&lt;a href=&quot;#视图&quot; class=&quot;headerlink&quot; title=&quot;视图&quot;&gt;&lt;/a&gt;视图&lt;/h2&gt;&lt;h3 id=&quot;创建新的navigation视图&quot;&gt;&lt;a href=&quot;#创建新的navigation视图&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="codeExample" scheme="http://jackliu17.github.io/tags/codeExample/"/>
    
  </entry>
  
  <entry>
    <title>iOS-UI-CodeExample</title>
    <link href="http://jackliu17.github.io/2016/03/18/iOS-UI-CodeExample/"/>
    <id>http://jackliu17.github.io/2016/03/18/iOS-UI-CodeExample/</id>
    <published>2016-03-18T02:08:59.000Z</published>
    <updated>2016-03-20T04:21:09.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;000-使用代码创建UI元素&quot;&gt;&lt;a href=&quot;#000-使用代码创建UI元素&quot; class=&quot;headerlink&quot; title=&quot;000 使用代码创建UI元素&quot;&gt;&lt;/a&gt;000 使用代码创建UI元素&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;let label = UILabel(frame: CGRect(x: 50, y: 50, width: 200, height: 100))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      label.text = &amp;quot;Hello jikexueyuan&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      view.addSubview(label)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;001-使用webView打开网站&quot;&gt;&lt;a href=&quot;#001-使用webView打开网站&quot; class=&quot;headerlink&quot; title=&quot;001.使用webView打开网站&quot;&gt;&lt;/a&gt;001.使用webView打开网站&lt;/h1&gt;&lt;p&gt;需要在info.plist里设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/webview%20setting.png&quot; alt=&quot;uiwebview&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;@IBOutlet weak var wv: UIWebView!
@IBOutlet weak var urlInput: UITextField!
@IBAction func btnGoClicked(sender: AnyObject) {
    wv.loadRequest(NSURLRequest(URL:NSURL(string: urlInput.text!)!))
    urlInput.resignFirstResponder()
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;002-圆形进度指示器&quot;&gt;&lt;a href=&quot;#002-圆形进度指示器&quot; class=&quot;headerlink&quot; title=&quot;002.圆形进度指示器&quot;&gt;&lt;/a&gt;002.圆形进度指示器&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%9C%86%E5%BD%A2%E8%BF%9B%E5%BA%A6%E6%8C%87%E7%A4%BA%E5%99%A8.gif&quot; alt=&quot;圆形进度指示器&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ProgressControl-swift&quot;&gt;&lt;a href=&quot;#ProgressControl-swift&quot; class=&quot;headerlink&quot; title=&quot;ProgressControl.swift&quot;&gt;&lt;/a&gt;ProgressControl.swift&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class ProgressControl: UIView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override init(frame:CGRect)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(frame: frame)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.backgroundColor = UIColor(white: 1, alpha: 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    required init?(coder aDecoder: NSCoder) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fatalError(&amp;quot;init(coder:) has not been implemented&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private var _progressValue:CGFloat = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    internal func getProgressValue()-&amp;gt;CGFloat&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return _progressValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    internal func setProgressValue(value:CGFloat)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _progressValue = value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setNeedsDisplay()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func drawRect(rect: CGRect) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.backgroundColor = UIColor(white: 1, alpha: 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Drawing code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        let ctx = UIGraphicsGetCurrentContext()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        let r = rect.width/2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CGContextAddArc(ctx, r, r, r, 0, 3.141592653*2, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CGContextSetRGBFillColor(ctx, 0.7, 0.7, 0.7, 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CGContextFillPath(ctx) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CGContextAddArc(ctx,r,r,r,0,3.141592653*2*_progressValue, 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CGContextAddLineToPoint(ctx, r, r)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CGContextSetRGBFillColor(ctx, 0, 0, 1, 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CGContextFillPath(ctx)   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;viewController-swift&quot;&gt;&lt;a href=&quot;#viewController-swift&quot; class=&quot;headerlink&quot; title=&quot;viewController.swift&quot;&gt;&lt;/a&gt;viewController.swift&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class ViewController: UIViewController &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private var pc:ProgressControl!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @IBAction func addProgressBtnPress(sender: AnyObject) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pc.setProgressValue(pc.getProgressValue()+0.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func viewDidLoad() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Do any additional setup after loading the view, typically from a nib.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pc = ProgressControl(frame:CGRect(x: 100,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            y: 100,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: 100,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            height: 100))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.view.addSubview(pc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func didReceiveMemoryWarning() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.didReceiveMemoryWarning()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Dispose of any resources that can be recreated.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;003-实时预览自定义控件&quot;&gt;&lt;a href=&quot;#003-实时预览自定义控件&quot; class=&quot;headerlink&quot; title=&quot;003.实时预览自定义控件&quot;&gt;&lt;/a&gt;003.实时预览自定义控件&lt;/h1&gt;&lt;h2 id=&quot;1-创建一个new-Target&quot;&gt;&lt;a href=&quot;#1-创建一个new-Target&quot; class=&quot;headerlink&quot; title=&quot;1.创建一个new Target&quot;&gt;&lt;/a&gt;1.创建一个new Target&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/new%20target.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-创建新的文件MyView-swift在这个target里&quot;&gt;&lt;a href=&quot;#2-创建新的文件MyView-swift在这个target里&quot; class=&quot;headerlink&quot; title=&quot;2.创建新的文件MyView.swift在这个target里&quot;&gt;&lt;/a&gt;2.创建新的文件MyView.swift在这个target里&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@IBDesignable class MyView: UIView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @IBInspectable var str:String = &amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @IBInspectable var borderWidth:CGFloat = 0&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        didSet&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        layer.borderWidth = borderWidth&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @IBInspectable var borderColor:UIColor = UIColor.clearColor()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        didSet&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        layer.borderColor = borderColor.CGColor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @IBInspectable var cornerRaius:CGFloat=0&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        didSet&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        layer.cornerRadius = cornerRaius&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;3-实时预览编辑效果&quot;&gt;&lt;a href=&quot;#3-实时预览编辑效果&quot; class=&quot;headerlink&quot; title=&quot;3.实时预览编辑效果&quot;&gt;&lt;/a&gt;3.实时预览编辑效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%AE%9E%E6%97%B6%E9%A2%84%E8%A7%88.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;004-传感器&quot;&gt;&lt;a href=&quot;#004-传感器&quot; class=&quot;headerlink&quot; title=&quot;004. 传感器&quot;&gt;&lt;/a&gt;004. 传感器&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import CoreMotion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class ViewController: UIViewController &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var cmm:CMMotionManager!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var q:NSOperationQueue!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func viewDidLoad() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Do any additional setup after loading the view, typically from a nib.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cmm = CMMotionManager()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        q = NSOperationQueue()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func viewWillAppear(animated: Bool) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        startAccelerometerUpdate()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        startGyroUpdate()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        startListenProximity()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        startListenLevel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func viewWillDisappear(animated: Bool) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stopAccelerometerUpdate()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stopGyroUpdate()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stopListenProximity()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stopListenLevel()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用加速度传感器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func startAccelerometerUpdate()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cmm.accelerometerUpdateInterval = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if cmm.accelerometerAvailable &amp;amp;&amp;amp; !cmm.accelerometerActive &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cmm.startAccelerometerUpdatesToQueue(q, withHandler: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (data:CMAccelerometerData?,err:NSError?) -&amp;gt; Void in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print(&amp;quot;AccelerometerData:\(data)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&amp;quot;加速度传感器不可用&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用陀螺仪&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func startGyroUpdate()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cmm.gyroUpdateInterval = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if cmm.gyroAvailable &amp;amp;&amp;amp; !cmm.gyroActive&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cmm.startGyroUpdatesToQueue(q, withHandler:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (data:CMGyroData?,err:NSError?)in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print(&amp;quot;Gyro data:\(data)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用距离传感器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func startListenProximity()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UIDevice.currentDevice().proximityMonitoringEnabled = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSNotificationCenter.defaultCenter().addObserver(self,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            selector: Selector(&amp;quot;proximityChanged&amp;quot;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name:UIDeviceProximityStateDidChangeNotification,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            object: nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func proximityChanged()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;\(UIDevice.currentDevice().proximityState)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用电源传感器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func startListenLevel()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIDevice.currentDevice().batteryMonitoringEnabled = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;\(UIDevice.currentDevice().batteryLevel)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSNotificationCenter.defaultCenter().addObserver(self,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            selector: (&amp;quot;levelChanged&amp;quot;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name: UIDeviceBatteryLevelDidChangeNotification,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            object: nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func levelChanged()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;\(UIDevice.currentDevice().batteryLevel)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func stopListenLevel()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSNotificationCenter.defaultCenter().removeObserver(self, name: UIDeviceBatteryLevelDidChangeNotification,object:nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func stopAccelerometerUpdate()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if cmm.accelerometerActive &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cmm.stopAccelerometerUpdates()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func stopGyroUpdate()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if cmm.gyroActive&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cmm.stopGyroUpdates()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func stopListenProximity()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSNotificationCenter.defaultCenter().removeObserver(self,name:UIDeviceProximityStateDidChangeNotification,object:nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func didReceiveMemoryWarning() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.didReceiveMemoryWarning()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Dispose of any resources that can be recreated.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;005-指南针&quot;&gt;&lt;a href=&quot;#005-指南针&quot; class=&quot;headerlink&quot; title=&quot;005. 指南针&quot;&gt;&lt;/a&gt;005. 指南针&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import CoreLocation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class ViewController: UIViewController,CLLocationManagerDelegate &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      @IBOutlet weak var pointerIv: UIImageView!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var lm:CLLocationManager!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func viewDidLoad() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lm = CLLocationManager()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lm.delegate = self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func viewWillAppear(animated: Bool) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lm.startUpdatingHeading()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func locationManager(manager: CLLocationManager, didUpdateHeading newHeading: CLHeading) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pointerIv.transform = CGAffineTransformMakeRotation(CGFloat((180-newHeading.magneticHeading)/180.0 * 3.141592653))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func viewWillDisappear(animated: Bool) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lm.stopUpdatingHeading()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;006-触摸事件的侦听-amp-图片的缩小放大&quot;&gt;&lt;a href=&quot;#006-触摸事件的侦听-amp-图片的缩小放大&quot; class=&quot;headerlink&quot; title=&quot;006.触摸事件的侦听 &amp;amp; 图片的缩小放大&quot;&gt;&lt;/a&gt;006.触摸事件的侦听 &amp;amp; 图片的缩小放大&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import UIKit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class ViewController: UIViewController &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @IBOutlet weak var iv:UIImageView!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private var lastDistance:CGFloat = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func viewDidLoad() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Do any additional setup after loading the view, typically from a nib.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //开启侦听多点触摸&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.view.multipleTouchEnabled = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func touchesBegan(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lastDistance = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;touchedBegan&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func touchesMoved(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //输出触摸时某个点的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //print(touches.first!.locationInView(self.view))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //输出有多少个触摸点同时在屏幕上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // print(touches.count)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //输出每一个触摸点的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//        for touch in touches &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//        print(touch.locationInView(self.view))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //图片的缩小放大&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        let touchesSet = touches as NSSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if touchesSet.count == 2&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        let p1 = touchesSet.allObjects[0].locationInView(self.view)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        let p2 = touchesSet.allObjects[1].locationInView(self.view)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            let xx = p1.x - p2.x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            let yy = p1.y - p2.y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            let currentDistance = sqrt(xx * xx + yy * yy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if lastDistance == 0.0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lastDistance = currentDistance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if lastDistance - currentDistance &amp;gt; 5&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print(&amp;quot;缩小&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lastDistance = currentDistance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    iv.transform = CGAffineTransformScale(iv.transform, 0.9, 0.9)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;else if lastDistance - currentDistance &amp;lt; -5&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print(&amp;quot;放大&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lastDistance = currentDistance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    iv.transform = CGAffineTransformScale(iv.transform, 1.1, 1.1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func touchesEnded(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;touchedEnded&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;007-浏览器打开网页-打电话-发短信-发邮件&quot;&gt;&lt;a href=&quot;#007-浏览器打开网页-打电话-发短信-发邮件&quot; class=&quot;headerlink&quot; title=&quot;007.浏览器打开网页 - 打电话 - 发短信 - 发邮件&quot;&gt;&lt;/a&gt;007.浏览器打开网页 - 打电话 - 发短信 - 发邮件&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@IBAction func btnGoWeb(sender: AnyObject) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIApplication.sharedApplication().openURL(NSURL(string:&amp;quot;http://www.google.com&amp;quot;)!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@IBAction func btnGoMail(sender: AnyObject) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIApplication.sharedApplication().openURL(NSURL(string:&amp;quot;mailto://xxx@jikexueyuan.com&amp;quot;)!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@IBAction func btnGoPhone(sender: AnyObject) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIApplication.sharedApplication().openURL(NSURL(string:&amp;quot;tel://10086&amp;quot;)!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@IBAction func btnGoMsg(sender: AnyObject) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIApplication.sharedApplication().openURL(NSURL(string:&amp;quot;sms://10086&amp;quot;)!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;app-A调用app-B&quot;&gt;&lt;a href=&quot;#app-A调用app-B&quot; class=&quot;headerlink&quot; title=&quot;app A调用app B&quot;&gt;&lt;/a&gt;app A调用app B&lt;/h1&gt;&lt;h2 id=&quot;app-A&quot;&gt;&lt;a href=&quot;#app-A&quot; class=&quot;headerlink&quot; title=&quot;app A&quot;&gt;&lt;/a&gt;app A&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@IBAction func btnCallIme(sender: AnyObject) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      UIApplication.sharedApplication().openURL(NSURL(string: &amp;quot;ime://i.love.you?h=Hello&amp;amp;b=World&amp;quot;)!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;app-B&quot;&gt;&lt;a href=&quot;#app-B&quot; class=&quot;headerlink&quot; title=&quot;app B&quot;&gt;&lt;/a&gt;app B&lt;/h2&gt;&lt;p&gt;在info.plist里先注册&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/register%20protocol.png&quot; alt=&quot;register protocol&quot;&gt;&lt;/p&gt;
&lt;p&gt;AppDelegate.swift&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func application(application: UIApplication, handleOpenURL url: NSURL) -&amp;gt; Bool &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      let vc = LabelViewController(nibName:&amp;quot;LabelViewController&amp;quot;,bundle:nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      window?.addSubview(vc.view)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      vc.myLabel.text = &amp;quot;\(url)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;008-从相册获取照片&quot;&gt;&lt;a href=&quot;#008-从相册获取照片&quot; class=&quot;headerlink&quot; title=&quot;008.从相册获取照片&quot;&gt;&lt;/a&gt;008.从相册获取照片&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/getImage.gif&quot; alt=&quot;getImage&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class ViewController: UIViewController,UIImagePickerControllerDelegate,UINavigationControllerDelegate &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @IBOutlet weak var iv:UIImageView!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @IBAction func btnGetImage(sender: AnyObject) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        let c = UIImagePickerController()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c.sourceType = UIImagePickerControllerSourceType.PhotoLibrary&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c.delegate = self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.presentViewController(c, animated:true,completion: nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func imagePickerController(picker: UIImagePickerController,didFinishPickingMediaWithInfo info: [String : AnyObject]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            let image:UIImage = info[UIImagePickerControllerOriginalImage] as! UIImage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            iv.image = image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            picker.dismissViewControllerAnimated(true, completion: nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;000-使用代码创建UI元素&quot;&gt;&lt;a href=&quot;#000-使用代码创建UI元素&quot; class=&quot;headerlink&quot; title=&quot;000 使用代码创建UI元素&quot;&gt;&lt;/a&gt;000 使用代码创建UI元素&lt;/h1&gt;&lt;figure class=&quot;highlight 
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="UIKit" scheme="http://jackliu17.github.io/tags/UIKit/"/>
    
      <category term="codeExample" scheme="http://jackliu17.github.io/tags/codeExample/"/>
    
  </entry>
  
  <entry>
    <title>UIStoryboard的相关操作</title>
    <link href="http://jackliu17.github.io/2016/03/17/UIStoryboard%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    <id>http://jackliu17.github.io/2016/03/17/UIStoryboard的相关操作/</id>
    <published>2016-03-17T02:18:16.000Z</published>
    <updated>2016-03-18T06:00:48.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h1&gt;&lt;p&gt;在info.plist文件中指定了所启动的storyboard是哪个。也可以另建新的storybord&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/UIStoryboard%20mainname.png&quot; alt=&quot;info.plist&quot;&gt;&lt;/p&gt;
&lt;p&gt;箭头所指就是启动的画面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/UIStoryboard.png&quot; alt=&quot;箭头所指&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;在Tab模板中新建一个new-tab&quot;&gt;&lt;a href=&quot;#在Tab模板中新建一个new-tab&quot; class=&quot;headerlink&quot; title=&quot;在Tab模板中新建一个new tab&quot;&gt;&lt;/a&gt;在Tab模板中新建一个new tab&lt;/h1&gt;&lt;p&gt;按住ctrl 键拖入到新的视图，选择 &lt;strong&gt;Relationship Segue — view controllers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/new%20tab.png&quot; alt=&quot;new tab&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;不同视图的跳转&quot;&gt;&lt;a href=&quot;#不同视图的跳转&quot; class=&quot;headerlink&quot; title=&quot;不同视图的跳转&quot;&gt;&lt;/a&gt;不同视图的跳转&lt;/h1&gt;&lt;h2 id=&quot;使用UIStoryboard创建视图&quot;&gt;&lt;a href=&quot;#使用UIStoryboard创建视图&quot; class=&quot;headerlink&quot; title=&quot;使用UIStoryboard创建视图&quot;&gt;&lt;/a&gt;使用UIStoryboard创建视图&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;点住Button,按住ctrl，向新的viewController拖动,选择segue模式&lt;/li&gt;
&lt;li&gt;从新视图的返回，使用如下代码: &lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.dismissModalViewControllerAnimated(true)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用nib文件创建视图&quot;&gt;&lt;a href=&quot;#使用nib文件创建视图&quot; class=&quot;headerlink&quot; title=&quot;使用nib文件创建视图&quot;&gt;&lt;/a&gt;使用nib文件创建视图&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建新的viewController文件和nib&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在初始视图中，如下代码跳转到新视图:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.presentModalViewController(MyViewController(nibName:&amp;quot;MyViewController&amp;quot;,bundle:nil),animated:true)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;从新视图的返回，使用如下代码: &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.dismissModalViewControllerAnimated(true)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;视图中传值&quot;&gt;&lt;a href=&quot;#视图中传值&quot; class=&quot;headerlink&quot; title=&quot;视图中传值&quot;&gt;&lt;/a&gt;视图中传值&lt;/h1&gt;&lt;h2 id=&quot;在第一个视图中&quot;&gt;&lt;a href=&quot;#在第一个视图中&quot; class=&quot;headerlink&quot; title=&quot;在第一个视图中&quot;&gt;&lt;/a&gt;在第一个视图中&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;创建新视图的同时，就将其属性配置好&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@IBOutlet var input:UITextField&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@IBAction func nextBtn&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let vc = MyViewController(nibName:&amp;quot;MyViewController&amp;quot;,bundle:nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vc.labelContent = input.text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.presentModalViewController(vc,animated:true)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;在第二个视图中&quot;&gt;&lt;a href=&quot;#在第二个视图中&quot; class=&quot;headerlink&quot; title=&quot;在第二个视图中&quot;&gt;&lt;/a&gt;在第二个视图中&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var labelContent:String = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func viewDidLoad()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myLabel.text = labelContent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;返回时传值&quot;&gt;&lt;a href=&quot;#返回时传值&quot; class=&quot;headerlink&quot; title=&quot;返回时传值&quot;&gt;&lt;/a&gt;返回时传值&lt;/h2&gt;&lt;p&gt;在第二个视图中，通过如下代码，访问到前一个视图&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;self.parentViewController&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h1&gt;&lt;p&gt;在info.plist文件中指定了所启动的storyboard是哪个。也可以另建新的storybord&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;h
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="Xcode" scheme="http://jackliu17.github.io/tags/Xcode/"/>
    
      <category term="UIKit" scheme="http://jackliu17.github.io/tags/UIKit/"/>
    
  </entry>
  
  <entry>
    <title>Keyboad快捷键</title>
    <link href="http://jackliu17.github.io/2016/03/17/Keyboad%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://jackliu17.github.io/2016/03/17/Keyboad快捷键/</id>
    <published>2016-03-17T02:13:06.000Z</published>
    <updated>2016-03-26T06:40:17.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Xcode&quot;&gt;&lt;a href=&quot;#Xcode&quot; class=&quot;headerlink&quot; title=&quot;Xcode&quot;&gt;&lt;/a&gt;Xcode&lt;/h1&gt;&lt;h3 id=&quot;显示某class的方法提示，在-后按esc键&quot;&gt;&lt;a href=&quot;#显示某class的方法提示，在-后按esc键&quot; class=&quot;headerlink&quot; title=&quot;显示某class的方法提示，在.后按esc键&quot;&gt;&lt;/a&gt;显示某class的方法提示，在.后按esc键&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Esc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Storyboard里放大缩小视图&quot;&gt;&lt;a href=&quot;#Storyboard里放大缩小视图&quot; class=&quot;headerlink&quot; title=&quot;Storyboard里放大缩小视图&quot;&gt;&lt;/a&gt;Storyboard里放大缩小视图&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;触摸板上的手势&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;查看某class内部的详情&quot;&gt;&lt;a href=&quot;#查看某class内部的详情&quot; class=&quot;headerlink&quot; title=&quot;查看某class内部的详情&quot;&gt;&lt;/a&gt;查看某class内部的详情&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;command + 点击&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Xcode&quot;&gt;&lt;a href=&quot;#Xcode&quot; class=&quot;headerlink&quot; title=&quot;Xcode&quot;&gt;&lt;/a&gt;Xcode&lt;/h1&gt;&lt;h3 id=&quot;显示某class的方法提示，在-后按esc键&quot;&gt;&lt;a href=&quot;#显示某class的方法提示，在-后按e
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="Mac" scheme="http://jackliu17.github.io/tags/Mac/"/>
    
      <category term="Xcode" scheme="http://jackliu17.github.io/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title>Objective-C语言应用开发基础编程入门</title>
    <link href="http://jackliu17.github.io/2016/03/16/Objective-C%E8%AF%AD%E8%A8%80%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/"/>
    <id>http://jackliu17.github.io/2016/03/16/Objective-C语言应用开发基础编程入门/</id>
    <published>2016-03-16T07:40:55.000Z</published>
    <updated>2016-03-17T02:07:30.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;NSString *name = @&amp;quot;jikexueyuan&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;以’-’代表对象&quot;&gt;&lt;a href=&quot;#以’-’代表对象&quot; class=&quot;headerlink&quot; title=&quot;以’%@’代表对象&quot;&gt;&lt;/a&gt;以’%@’代表对象&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;NSLog(@&amp;quot;Hello Objective-C&amp;quot;);
NSLog(@&amp;quot;The number is %d&amp;quot;,1000);
NSLog(@&amp;quot;Hello %s&amp;quot;,&amp;quot;XiaoLi&amp;quot;);
NSLog(@&amp;quot;Hello %@&amp;quot;,name);
NSLog(@&amp;quot;ObjC Object %@&amp;quot;,[[[NSObject alloc] init] description]); //实际上是调用NSObject中的description方法
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;Class的构成&quot;&gt;&lt;a href=&quot;#Class的构成&quot; class=&quot;headerlink&quot; title=&quot;Class的构成&quot;&gt;&lt;/a&gt;Class的构成&lt;/h1&gt;&lt;h2 id=&quot;h-file&quot;&gt;&lt;a href=&quot;#h-file&quot; class=&quot;headerlink&quot; title=&quot;.h file&quot;&gt;&lt;/a&gt;.h file&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@interface People : NSObject&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int _age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSString *_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// class method-------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+(People*)peopleWithAge:(int)age andName:(NSString*)name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(id)initWithAge:(int)age andName:(NSString*)name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(int)getAge;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(NSString*)getName;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;m-file&quot;&gt;&lt;a href=&quot;#m-file&quot; class=&quot;headerlink&quot; title=&quot;.m file&quot;&gt;&lt;/a&gt;.m file&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+(People*)peopleWithAge:(int)age andName:(NSString *)name&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return [[People alloc] initWithAge:age andName:name];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (instancetype)initWithAge:(int)age andName:(NSString *)name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self = [super init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (self) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return self;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(int)getAge&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return _age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(NSString*)getName&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return _name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;call-method&quot;&gt;&lt;a href=&quot;#call-method&quot; class=&quot;headerlink&quot; title=&quot;call method&quot;&gt;&lt;/a&gt;call method&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Hello *h = [[Hello alloc] init];
[h sayHello];
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;数组与字典&quot;&gt;&lt;a href=&quot;#数组与字典&quot; class=&quot;headerlink&quot; title=&quot;数组与字典&quot;&gt;&lt;/a&gt;数组与字典&lt;/h1&gt;&lt;h2 id=&quot;非可变数组&quot;&gt;&lt;a href=&quot;#非可变数组&quot; class=&quot;headerlink&quot; title=&quot;非可变数组&quot;&gt;&lt;/a&gt;非可变数组&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;//三种构造方法，可以从plist文件中获取数据
NSArray *arr = @[@&amp;quot;Hello&amp;quot;,@&amp;quot;jikexueyuan&amp;quot;];
NSArray *arr = [NSArray arrayWithObjects:@&amp;quot;Hello&amp;quot;, @&amp;quot;jikexueyuan&amp;quot;,nil];
NSArray *arr = [NSArray arrayWithContentsOfFile:[[NSBundle mainBundle] pathForResource:@&amp;quot;data&amp;quot; ofType:@&amp;quot;plist&amp;quot;]];

for (int i=0; i&amp;lt;[arr count]; i++) {
    NSLog(@&amp;quot;%@&amp;quot;,[arr objectAtIndex:i]);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;可变数组&quot;&gt;&lt;a href=&quot;#可变数组&quot; class=&quot;headerlink&quot; title=&quot;可变数组&quot;&gt;&lt;/a&gt;可变数组&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;NSMutableArray *arr = [[NSMutableArray alloc] init];

for (int i=0; i&amp;lt;100; i++) {
    [arr addObject:[NSString stringWithFormat:@&amp;quot;Item %d&amp;quot;,i]];
}

NSLog(@&amp;quot;%@&amp;quot;,arr);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;数组的plist文件&quot;&gt;&lt;a href=&quot;#数组的plist文件&quot; class=&quot;headerlink&quot; title=&quot;数组的plist文件&quot;&gt;&lt;/a&gt;数组的plist文件&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/array%20plist%20file.png&quot; alt=&quot;数组的plist文件&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;字典的plist文件&quot;&gt;&lt;a href=&quot;#字典的plist文件&quot; class=&quot;headerlink&quot; title=&quot;字典的plist文件&quot;&gt;&lt;/a&gt;字典的plist文件&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/dic%20plist%20file.png&quot; alt=&quot;字典的plist文件&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;字典与可变字典&quot;&gt;&lt;a href=&quot;#字典与可变字典&quot; class=&quot;headerlink&quot; title=&quot;字典与可变字典&quot;&gt;&lt;/a&gt;字典与可变字典&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;//字典的构造
NSDictionary *dict = @{@&amp;quot;name&amp;quot;: @&amp;quot;ZhangSan&amp;quot;,@&amp;quot;sex&amp;quot;:@&amp;quot;male&amp;quot;};    
NSDictionary *dict = [NSDictionary dictionaryWithContentsOfFile:[[NSBundle mainBundle] pathForResource:@&amp;quot;data&amp;quot; ofType:@&amp;quot;plist&amp;quot;]];
NSLog(@&amp;quot;%@&amp;quot;,[dict objectForKey:@&amp;quot;age&amp;quot;]);

//可变字典
NSMutableDictionary *dict = [[NSMutableDictionary alloc] init];
[dict setObject:@&amp;quot;jikexueyuan&amp;quot; forKey:@&amp;quot;name&amp;quot;];

NSLog(@&amp;quot;%@&amp;quot;,[dict objectForKey:@&amp;quot;name&amp;quot;]);
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;protocol&quot;&gt;&lt;a href=&quot;#protocol&quot; class=&quot;headerlink&quot; title=&quot;protocol&quot;&gt;&lt;/a&gt;protocol&lt;/h1&gt;&lt;h2 id=&quot;h-file-1&quot;&gt;&lt;a href=&quot;#h-file-1&quot; class=&quot;headerlink&quot; title=&quot;.h file&quot;&gt;&lt;/a&gt;.h file&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;

@protocol IPeople &amp;lt;NSObject&amp;gt;

-(int)getAge;
-(void)setAge:(int)age;
-(NSString*)getName;

@end
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;m-file-1&quot;&gt;&lt;a href=&quot;#m-file-1&quot; class=&quot;headerlink&quot; title=&quot;.m file&quot;&gt;&lt;/a&gt;.m file&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;@interface Man : NSObject&amp;lt;IPeople&amp;gt;{
int _age;
}

-(id)init;

-(void)setAge:(int)age;
-(NSString*)getName;
-(int)getAge;

@property id&amp;lt;ManDelegate&amp;gt; delegate;

@end
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;Exception&quot;&gt;&lt;a href=&quot;#Exception&quot; class=&quot;headerlink&quot; title=&quot;Exception&quot;&gt;&lt;/a&gt;Exception&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;@try {

    //需要被捕获异常的代码
    @throw [NSException exceptionWithName:@&amp;quot;My Error&amp;quot; reason:nil userInfo:nil];
}
@catch (NSException *exception) {

    //输出一场信息
    NSLog(@&amp;quot;%@&amp;quot;,exception);
}
@finally {
    //无论是否有异常，都要执行
    NSLog(@&amp;quot;run&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;NSString *name = @&amp;quot;jikexueyuan&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;h
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="objective-C" scheme="http://jackliu17.github.io/tags/objective-C/"/>
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发面试</title>
    <link href="http://jackliu17.github.io/2016/03/16/iOS%E5%BC%80%E5%8F%91%E9%9D%A2%E8%AF%95/"/>
    <id>http://jackliu17.github.io/2016/03/16/iOS开发面试/</id>
    <published>2016-03-16T05:43:22.000Z</published>
    <updated>2016-03-16T07:18:16.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Objective-C有多重继承吗？不是的话有什么替代方法&quot;&gt;&lt;a href=&quot;#Objective-C有多重继承吗？不是的话有什么替代方法&quot; class=&quot;headerlink&quot; title=&quot;Objective-C有多重继承吗？不是的话有什么替代方法?&quot;&gt;&lt;/a&gt;Objective-C有多重继承吗？不是的话有什么替代方法?&lt;/h3&gt;&lt;p&gt;cocoa中所有的类都是NSObject的子类，多继承在这里是用protocol委托代理实现的&lt;/p&gt;
&lt;h3 id=&quot;Objective-C有私有方法吗，私有变量呢&quot;&gt;&lt;a href=&quot;#Objective-C有私有方法吗，私有变量呢&quot; class=&quot;headerlink&quot; title=&quot;Objective-C有私有方法吗，私有变量呢?&quot;&gt;&lt;/a&gt;Objective-C有私有方法吗，私有变量呢?&lt;/h3&gt;&lt;p&gt;Objectivie-C类里面的方法只有两种，静态方法和实例方法。所有实例变量默认都是私有的，所有实例方法默认都是公有的。&lt;/p&gt;
&lt;h3 id=&quot;const作用&quot;&gt;&lt;a href=&quot;#const作用&quot; class=&quot;headerlink&quot; title=&quot;const作用&quot;&gt;&lt;/a&gt;const作用&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;欲阻止一个变量被改变，可以使用const关键字&lt;/li&gt;
&lt;li&gt;对指针来说，可以指定指针本身为const,也可以指定指针所指的数据为const,或二者同时指定为const&lt;/li&gt;
&lt;li&gt;在一个函数声明中，const可以修饰形参，表明它是一个输入参数，在函数内部不能改变其值&lt;/li&gt;
&lt;li&gt;对于类的成员函数，若指定其为const类型，则表明其是一个常函数，不能修改类的成员变量&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;static作用&quot;&gt;&lt;a href=&quot;#static作用&quot; class=&quot;headerlink&quot; title=&quot;static作用&quot;&gt;&lt;/a&gt;static作用&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;函数体内static变量的作用范围为该函数体，不同于auto变量，该变量的内存只被分配一次，因此其值在下次调用时仍维持上次的值&lt;/li&gt;
&lt;li&gt;在模块内的static全局变量可以被模块内所用的函数访问，但不能被模块外其他函数访问&lt;/li&gt;
&lt;li&gt;在模块内的static函数只可被这一模块内的其他函数调用，这个函数的使用范围被限制在声明它的模块内&lt;/li&gt;
&lt;li&gt;在类中的static成员变量属于整个类所拥有，对类的所有对象只有一份拷贝&lt;/li&gt;
&lt;li&gt;在类中的static成员函数属于整个类所拥有，这个函数不接收this指针，因而只能访问类的static成员变量&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;extern-“C”的作用&quot;&gt;&lt;a href=&quot;#extern-“C”的作用&quot; class=&quot;headerlink&quot; title=&quot;extern “C”的作用&quot;&gt;&lt;/a&gt;extern “C”的作用&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;被extern”C”限定的函数或者变量是extern类型的&lt;/li&gt;
&lt;li&gt;被extern”C”修饰的变量和函数是按照C语言方式编译和连接的&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;import和-include的区别，-class呢？&quot;&gt;&lt;a href=&quot;#import和-include的区别，-class呢？&quot; class=&quot;headerlink&quot; title=&quot;#import和 #include的区别，@class呢？&quot;&gt;&lt;/a&gt;#import和 #include的区别，@class呢？&lt;/h3&gt;&lt;p&gt;@class一般用于头文件中需要声明该类的某个实例变量的时候用到，在m文件中还是需要使用#import，而#import比#include的好处就是不会引起交叉编译&lt;/p&gt;
&lt;h3 id=&quot;objective-C的优点&quot;&gt;&lt;a href=&quot;#objective-C的优点&quot; class=&quot;headerlink&quot; title=&quot;objective-C的优点&quot;&gt;&lt;/a&gt;objective-C的优点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Categories&lt;/li&gt;
&lt;li&gt;Posing&lt;/li&gt;
&lt;li&gt;动态识别&lt;/li&gt;
&lt;li&gt;指标计算&lt;/li&gt;
&lt;li&gt;弹性讯息传递&lt;/li&gt;
&lt;li&gt;不是一个过度复杂的C衍生语言&lt;/li&gt;
&lt;li&gt;OC与C++可以混合编程&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Objective-C的缺点&quot;&gt;&lt;a href=&quot;#Objective-C的缺点&quot; class=&quot;headerlink&quot; title=&quot;Objective-C的缺点&quot;&gt;&lt;/a&gt;Objective-C的缺点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;不支持命名空间&lt;/li&gt;
&lt;li&gt;不支持运算符重载&lt;/li&gt;
&lt;li&gt;不支持多重继承&lt;/li&gt;
&lt;li&gt;使用动态运行时类型，所有的方法都是函数调用，所以很多编译时优化方法都用不到&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Objective-C的内存管理&quot;&gt;&lt;a href=&quot;#Objective-C的内存管理&quot; class=&quot;headerlink&quot; title=&quot;Objective-C的内存管理&quot;&gt;&lt;/a&gt;Objective-C的内存管理&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;通过分配和初始化([[MyClass alloc]init])的方式来创建对象，那就拥有这个对象，需要负责该对象的释放。这个规则在使用NSObject的便利方法new时也同样适用。&lt;/li&gt;
&lt;li&gt;如果您拷贝(copy)一个对象，您也拥有拷贝得到的对象，需要负责该对象的释放。如果您保持(retain)一个对象，你就部分拥有这个对象，需要&lt;br&gt;在不再使用时释放该对象。反过来如果您从其他对象那里接收到一个对象。则您不再拥有该对象。也不应该释放它。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;自动释放池是什么，如何工作&quot;&gt;&lt;a href=&quot;#自动释放池是什么，如何工作&quot; class=&quot;headerlink&quot; title=&quot;自动释放池是什么，如何工作&quot;&gt;&lt;/a&gt;自动释放池是什么，如何工作&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E8%87%AA%E5%8A%A8%E9%87%8A%E6%94%BE%E6%B1%A0.png&quot; alt=&quot;自动释放池&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;堆和栈的区别&quot;&gt;&lt;a href=&quot;#堆和栈的区别&quot; class=&quot;headerlink&quot; title=&quot;堆和栈的区别&quot;&gt;&lt;/a&gt;堆和栈的区别&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%A0%86%E5%92%8C%E6%A0%88%E7%9A%84%E5%8C%BA%E5%88%AB1.png&quot; alt=&quot;堆和栈的区别1&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%A0%86%E5%92%8C%E6%A0%88%E7%9A%84%E5%8C%BA%E5%88%AB2.png&quot; alt=&quot;堆和栈的区别2&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;swift新特性&quot;&gt;&lt;a href=&quot;#swift新特性&quot; class=&quot;headerlink&quot; title=&quot;swift新特性&quot;&gt;&lt;/a&gt;swift新特性&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/Swift%E6%96%B0%E7%89%B9%E6%80%A7.png&quot; alt=&quot;swift新特性&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Objective-C有多重继承吗？不是的话有什么替代方法&quot;&gt;&lt;a href=&quot;#Objective-C有多重继承吗？不是的话有什么替代方法&quot; class=&quot;headerlink&quot; title=&quot;Objective-C有多重继承吗？不是的话有什么替代方法?&quot;&gt;&lt;/
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="interview" scheme="http://jackliu17.github.io/tags/interview/"/>
    
  </entry>
  
  <entry>
    <title>iOS-Swift与Objective-C混合编程</title>
    <link href="http://jackliu17.github.io/2016/03/16/iOS-Swift%E4%B8%8EObjective-C%E6%B7%B7%E5%90%88%E7%BC%96%E7%A8%8B/"/>
    <id>http://jackliu17.github.io/2016/03/16/iOS-Swift与Objective-C混合编程/</id>
    <published>2016-03-16T04:35:57.000Z</published>
    <updated>2016-03-16T07:22:24.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Swift调用Objective-C代码&quot;&gt;&lt;a href=&quot;#Swift调用Objective-C代码&quot; class=&quot;headerlink&quot; title=&quot;Swift调用Objective-C代码&quot;&gt;&lt;/a&gt;Swift调用Objective-C代码&lt;/h1&gt;&lt;p&gt;在swift project里新建OC文件时，会弹出如下对话框，选择yes,创建&lt;code&gt;SwiftTut-Bridging-Header&lt;/code&gt;文件与&lt;code&gt;OCHello&lt;/code&gt;文件&lt;br&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/swift-oc-Bridge.png&quot; alt=&quot;dialogue&quot;&gt;&lt;br&gt;在SwiftTut-Bridging-Header里加入如下代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include &amp;quot;OCHello.h&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以在swift项目里使用oc文件了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var h = OCHello()
    h.sayHello()
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;Objective-C调用Swift代码&quot;&gt;&lt;a href=&quot;#Objective-C调用Swift代码&quot; class=&quot;headerlink&quot; title=&quot;Objective-C调用Swift代码&quot;&gt;&lt;/a&gt;Objective-C调用Swift代码&lt;/h1&gt;&lt;p&gt;在OC project里新建swift文件时，会弹出如下对话框，选择yes,创建&lt;code&gt;SwiftTut-Bridging-Header&lt;/code&gt;文件与&lt;code&gt;SwfitHello&lt;/code&gt;文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/swift-oc-Bridge.png&quot; alt=&quot;dialogue&quot;&gt;&lt;/p&gt;
&lt;p&gt;在Project file –&amp;gt;Build setting –&amp;gt; Package –&amp;gt;Defines module –&amp;gt; 选择”Yes”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/import%20Swift%20-%20build%20setting.png&quot; alt=&quot;dialogue2&quot;&gt;&lt;/p&gt;
&lt;p&gt;在OC文件里引入”ProductName-Swift.h”文件，这个是系统自动生成的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#import &amp;quot;CallSwift-Swift.h&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在OC文件里可以引用swift类了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SwiftHello *h = [[SwiftHello alloc]init];
[h sayHello];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS official doc for mixing swift with OC&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Swift调用Objective-C代码&quot;&gt;&lt;a href=&quot;#Swift调用Objective-C代码&quot; class=&quot;headerlink&quot; title=&quot;Swift调用Objective-C代码&quot;&gt;&lt;/a&gt;Swift调用Objective-C代码&lt;/h1&gt;&lt;
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="objective-C" scheme="http://jackliu17.github.io/tags/objective-C/"/>
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="swift" scheme="http://jackliu17.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>Swift中类的构造与析构</title>
    <link href="http://jackliu17.github.io/2016/03/15/Swift%E4%B8%AD%E7%B1%BB%E7%9A%84%E6%9E%84%E9%80%A0%E4%B8%8E%E6%9E%90%E6%9E%84/"/>
    <id>http://jackliu17.github.io/2016/03/15/Swift中类的构造与析构/</id>
    <published>2016-03-14T23:44:10.000Z</published>
    <updated>2016-04-17T04:35:51.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;类和结构体的构造器&quot;&gt;&lt;a href=&quot;#类和结构体的构造器&quot; class=&quot;headerlink&quot; title=&quot;类和结构体的构造器&quot;&gt;&lt;/a&gt;类和结构体的构造器&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Swift的构造器构造出来的实例由系统隐式返回，不用return&lt;/li&gt;
&lt;li&gt;构造器的作用完成每个类，结构体中实例存储属性的初始化&lt;/li&gt;
&lt;li&gt;为实例存储属性赋初始值的时机:1.定义实例存储属性时指定初始值。2.在构造器中为实例存储属性指定初始值.&lt;/li&gt;
&lt;li&gt;swift只为类提供一个无参数的构造器&lt;/li&gt;
&lt;li&gt;swift为结构体提供两个构造器:无参数的构造器和初始化所有实例存储属性的构造器&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;构造器代理：&quot;&gt;&lt;a href=&quot;#构造器代理：&quot; class=&quot;headerlink&quot; title=&quot;构造器代理：&quot;&gt;&lt;/a&gt;构造器代理：&lt;/h1&gt;&lt;p&gt;在定义构造器时，通过self.init(实参)调用其他构造器来完成实例的部分构造过程，就是A构造器调用B构造器&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct Apple&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name: String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color: String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weight: Double!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(_ name: String , _ color:String)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 两个参数的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name: String , color:String)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.init(name , color)  // 构造器代理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 为构造器显式指定外部形参名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(appleName n: String , appleColor c:String)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //		name = &amp;quot;临时值&amp;quot; // 这行代码将导致错误&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.init(n , c)  // 构造器代理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 调用构造器代理之后，即可通过self访问该实例的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;--执行显式指定外部形参名的构造器--\(self.name)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 定义三个参数的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name: String , color: String , weight: Double)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.init(name , color)  // 构造器代理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.weight = weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var ap1 = Apple(&amp;quot;红富士&amp;quot; , &amp;quot;粉红色&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;\(ap1.name)---&amp;gt;\(ap1.color)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var ap2 = Apple(appleName:&amp;quot;青苹果&amp;quot; , appleColor:&amp;quot;绿色&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;\(ap2.name)---&amp;gt;\(ap2.color)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var ap3 = Apple(name:&amp;quot;美国苹果&amp;quot; , color:&amp;quot;红色&amp;quot; , weight:0.45)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;指定构造器&quot;&gt;&lt;a href=&quot;#指定构造器&quot; class=&quot;headerlink&quot; title=&quot;指定构造器&quot;&gt;&lt;/a&gt;指定构造器&lt;/h1&gt;&lt;p&gt;一个类中至少有一个指定构造器，其必须负责初始化类中所有的实例存储属性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E6%8C%87%E5%AE%9A%E6%9E%84%E9%80%A0%E5%99%A8%E7%9A%84%E4%BB%A3%E7%A0%81%E9%A1%BA%E5%BA%8F.png&quot; alt=&quot;指定构造器&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;便利构造器&quot;&gt;&lt;a href=&quot;#便利构造器&quot; class=&quot;headerlink&quot; title=&quot;便利构造器&quot;&gt;&lt;/a&gt;便利构造器&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;便利构造器属于次要的，辅助性的构造器&lt;/li&gt;
&lt;li&gt;类中可以不定义便利构造器，便利构造器必须调用同一个类中的其他构造器完成初始化&lt;/li&gt;
&lt;li&gt;只有类中才有便利构造器的概念&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E5%AE%89%E5%85%A8%E6%A3%80%E6%9F%A53.png&quot; alt=&quot;安全检查3&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;便利构造器的语法格式:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   convenience init(形参)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Apple&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weight:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义指定构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String, weight:Double)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义便利构造器，使用convenience修饰&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init(n name:String, w weight:Double)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //便利构造器必须调用同一个类中其他构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name: name, weight: weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var app1 = Apple(n: &amp;quot;Red apple&amp;quot;, w: 1.2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var app2 = Apple(name: &amp;quot;Alvocado&amp;quot;, weight: 2.4)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;类的构造器链&quot;&gt;&lt;a href=&quot;#类的构造器链&quot; class=&quot;headerlink&quot; title=&quot;类的构造器链&quot;&gt;&lt;/a&gt;类的构造器链&lt;/h1&gt;&lt;h2 id=&quot;规则&quot;&gt;&lt;a href=&quot;#规则&quot; class=&quot;headerlink&quot; title=&quot;规则&quot;&gt;&lt;/a&gt;规则&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;子类构造器必须调用直接父类的指定构造器(如果有父类)&lt;/li&gt;
&lt;li&gt;便利构造器必须调用同一个类中的其他构造器;&lt;/li&gt;
&lt;li&gt;便利构造器调用的构造器链的最终节点必须是指定构造器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简化记忆为:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;指定构造器总是向上代理(调用父类构造器)&lt;/li&gt;
&lt;li&gt;便利构造器总是必须横向代理(调用当前类的其他构造器)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;类的构造器链1&quot;&gt;&lt;a href=&quot;#类的构造器链1&quot; class=&quot;headerlink&quot; title=&quot;类的构造器链1&quot;&gt;&lt;/a&gt;类的构造器链1&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E7%B1%BB%E7%9A%84%E6%9E%84%E9%80%A0%E5%99%A8%E9%93%BE.png&quot; alt=&quot;类的构造器链1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;类的构造器链2&quot;&gt;&lt;a href=&quot;#类的构造器链2&quot; class=&quot;headerlink&quot; title=&quot;类的构造器链2&quot;&gt;&lt;/a&gt;类的构造器链2&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E7%B1%BB%E7%9A%84%E6%9E%84%E9%80%A0%E5%99%A8%E9%93%BE2.png&quot; alt=&quot;类的构造器链2&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;代码示例&quot;&gt;&lt;a href=&quot;#代码示例&quot; class=&quot;headerlink&quot; title=&quot;代码示例&quot;&gt;&lt;/a&gt;代码示例&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weight:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init (name:String) &amp;#123; //1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       self.weight = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init (name:String,weight:Double)&amp;#123;//2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用本类中的1号指定构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义另一个便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init(n name:String,w weight:Double)&amp;#123;//3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用本类中2号便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name,weight:weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Apple:Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String,weight:Double,color:String)&amp;#123;//4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.color = color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //子类指定构造器必须调用父类的指定构造器，此处调用父类1号构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    super.init(name: name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = weight //为什么不能放在init前面？因为父类构造器会把值给覆盖&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init()&amp;#123;//5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //子类指定构造器必须调用父类的指定构造器，此处调用父类1号构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: &amp;quot;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义一个便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init(name:String,color:String) &amp;#123;//6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用本类中4号指定构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name,weight:0.0,color:color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义一个便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init(n name:String, c color:String)&amp;#123;//7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用本类中6号便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name,color:color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;两段式构造&quot;&gt;&lt;a href=&quot;#两段式构造&quot; class=&quot;headerlink&quot; title=&quot;两段式构造&quot;&gt;&lt;/a&gt;两段式构造&lt;/h1&gt;&lt;h2 id=&quot;第一阶段&quot;&gt;&lt;a href=&quot;#第一阶段&quot; class=&quot;headerlink&quot; title=&quot;第一阶段&quot;&gt;&lt;/a&gt;第一阶段&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;程序调用子类的某个构造器&lt;/li&gt;
&lt;li&gt;为实例分配内存，此时实例的内存还没有被初始化&lt;/li&gt;
&lt;li&gt;指定构造器确保子类定义的所有实例存储属性都已被赋初值&lt;/li&gt;
&lt;li&gt;指定构造器将调用父类的构造器，完成父类定义的实例存储属性的初始化&lt;/li&gt;
&lt;li&gt;沿着调用父类构造器的构造器链一直往上执行，直到到达构造器链的最顶部&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E4%B8%A4%E6%AE%B5%E5%BC%8F%E6%9E%84%E9%80%A0%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5.png&quot; alt=&quot;第一阶段&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第二阶段&quot;&gt;&lt;a href=&quot;#第二阶段&quot; class=&quot;headerlink&quot; title=&quot;第二阶段&quot;&gt;&lt;/a&gt;第二阶段&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;沿着继承树往下，构造器此时可以修改实例属性，访问self,甚至可以调用实例方法&lt;/li&gt;
&lt;li&gt;最后，构造器链中的便利构造器都有机会定制实例和使用self&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrh1x.com1.z0.glb.clouddn.com/%E4%B8%A4%E6%AE%B5%E5%BC%8F%E6%9E%84%E9%80%A0%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5.png&quot; alt=&quot;第二阶段&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;安全检查规则&quot;&gt;&lt;a href=&quot;#安全检查规则&quot; class=&quot;headerlink&quot; title=&quot;安全检查规则&quot;&gt;&lt;/a&gt;安全检查规则&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;指定构造器必须先初始化当前类中定义的实例存储属性，然后才能向上调用父类构造器&lt;/li&gt;
&lt;li&gt;指定构造器必须先向上调用父类构造器，然后才能对继承得到的属性赋值&lt;/li&gt;
&lt;li&gt;便利构造器必须先调用同一个类的其他构造器，然后才能对属性赋值。否则如果先赋值，在调用，那就会把刚刚赋值的给覆盖掉&lt;/li&gt;
&lt;li&gt;构造器在第一阶段完成之前，不能调用实例方法，不能读取实例属性&lt;/li&gt;
&lt;li&gt;总之，建议实例存储属性指定初始值&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;安全检查代码示例1&quot;&gt;&lt;a href=&quot;#安全检查代码示例1&quot; class=&quot;headerlink&quot; title=&quot;安全检查代码示例1&quot;&gt;&lt;/a&gt;安全检查代码示例1&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Apple:Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(color:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //print(self.color) // error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //print(self.color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = &amp;quot;Red&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //print(super.name)// error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: &amp;quot;Flower apple&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //print(super.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.name = &amp;quot;red apple&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var a = Apple(color: &amp;quot;Green&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安全检查代码示例2&quot;&gt;&lt;a href=&quot;#安全检查代码示例2&quot; class=&quot;headerlink&quot; title=&quot;安全检查代码示例2&quot;&gt;&lt;/a&gt;安全检查代码示例2&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Apple:Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(color:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(self.color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name:&amp;quot;Red apple&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init (name:String,color:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用其他构造器之前，不能访问或修改任何实例存储属性，下面两行代码出错&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //print(self.color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      //  super.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //调用本类其他构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(color:&amp;quot;Red&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var a = Apple(color: &amp;quot;Red&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h1&gt;&lt;p&gt;Swift的子类不会自动继承父类的构造器，若继承，则满足如下规则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.如果子类没有提供任何指定构造器，那么它将自动继承父类的所有指定构造器&lt;br&gt;2.如果子类实现了父类所有的指定构造器，无论如何实现的，都将自动继承父类的所有便利构造器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weight:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义一个指定构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String,weight:Double)&amp;#123;  //1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义2个便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init(name:String)&amp;#123;    //2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name,weight:0.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init()&amp;#123;               //3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:&amp;quot;Fruit&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = 1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//该类提供了指定构造器，并未实现父类所有的指定构造器，所以根据规则，就如下两个构造器，不继承父类的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Apple:Fruit&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义一个指定构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String,color:String,weight:Double)&amp;#123; //4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: name, weight: weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义一个便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init(name:String,color:String)&amp;#123;   //5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name,color:color,weight:0.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//该类没有定义任何构造器，所以根据规则继承父类的所有&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Fu:Apple&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var vitamin:Double = 0.21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;重写&quot;&gt;&lt;a href=&quot;#重写&quot; class=&quot;headerlink&quot; title=&quot;重写&quot;&gt;&lt;/a&gt;重写&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;子类构造器重写了父类的指定构造器，必须添加override修饰符&lt;/li&gt;
&lt;li&gt;子类中定义的构造器只是与父类中便利构造器的形参列表，外部形参名相同，不算重写&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weight:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init()&amp;#123;                       //1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String,weight:Double)&amp;#123;  //2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init(name:String)&amp;#123;    //3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name,weight:0.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init(_ name:String)&amp;#123;   //4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Apple:Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //重写父类的指定构造器                 //override 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override init(name:String,weight:Double)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = &amp;quot;Default&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //调用父类构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name:name, weight:weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义指定构造器                      //5 这个和父类的便利构造器名和形参名都相同，但是不算做重写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String)&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = &amp;quot;Default&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: name, weight: 0.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //便利构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    convenience init(name: String, weight: Double,color:String) &amp;#123;  //6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name,weight:weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //使用便利构造器重写父类的指定构造器     //override 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override convenience init() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:&amp;quot;Apple&amp;quot;,weight:0.0,color:&amp;quot;Pink&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;可能失败的构造器&quot;&gt;&lt;a href=&quot;#可能失败的构造器&quot; class=&quot;headerlink&quot; title=&quot;可能失败的构造器&quot;&gt;&lt;/a&gt;可能失败的构造器&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;可能失败的构造器:使用Init？或者!关键字进行定义&lt;/li&gt;
&lt;li&gt;在构造器执行体中使用return nil 来表示构造器失败&lt;/li&gt;
&lt;li&gt;Swift不允许定义两个相同形参列表的构造器。即使一个是可能失败的构造器，一个是普通的构造器也不行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可能失败的构造器必须满足如下两个条件才能触发:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;该类中的所有实例存储属性都已被赋初始值&lt;/li&gt;
&lt;li&gt;所有的构造器调用都已经被执行&lt;/li&gt;
&lt;li&gt;可能失败的构造器可以调用同一个类中的普通构造器&lt;/li&gt;
&lt;li&gt;普通构造器不能调用同一个类中可能失败的构造器init?，但可以调用init!隐式解析的构造器&lt;/li&gt;
&lt;li&gt;结构体中，普通构造器却可以调用同一个结构体中可能失败的构造器&lt;h2 id=&quot;代码1&quot;&gt;&lt;a href=&quot;#代码1&quot; class=&quot;headerlink&quot; title=&quot;代码1&quot;&gt;&lt;/a&gt;代码1&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct Cat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        let name: String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init?(name: String) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 如果传入的name参数为空字符串，构造器失败，返回nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if name.isEmpty &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let c1 = Cat(name: &amp;quot;Kitty&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if c1 != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 创建c1的构造器是init?，因此程序必须对c1执行强制解析&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;c1的name为：\(c1!.name)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let c2 = Cat(name: &amp;quot;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(c2 == nil) // 输出true，表明c2为nil&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;enum Season&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Spring, Summer, Autumn, Winter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 使用init!定义可能失败的构造器，则该构造器创建的实例可进行隐式解析&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init!(name: Character) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 根据传入的构造器参数选择相应的枚举成员&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        switch name &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;quot;S&amp;quot;,&amp;quot;s&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self = .Spring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;quot;U&amp;quot;, &amp;quot;u&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self = .Summer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;quot;A&amp;quot;, &amp;quot;a&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self = .Autumn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;quot;W&amp;quot;, &amp;quot;w&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self = .Winter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 如果传入其他参数，构造失败，返回nil。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let s1 = Season(name: &amp;quot;s&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if s1 != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;Season实例构造成功！&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let s2 = Season(name: &amp;quot;x&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s2 == nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;代码2&quot;&gt;&lt;a href=&quot;#代码2&quot; class=&quot;headerlink&quot; title=&quot;代码2&quot;&gt;&lt;/a&gt;代码2&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class User &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name :String   //如果没有下面的赋值语句。根据规则1. 如果这个是可选类型 var name: String! ，那这样也可以，算是已经赋值nil了。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init?(name:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //self.name = &amp;quot;&amp;quot;     // 根据规则1.必须先赋值，才能return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if name.isEmpty&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return nil  //根据规则2. return nil 必须在super init 和 self init语句之后&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class User&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name: String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init?(name:String)&amp;#123; //如果改为init!, 那就是隐式解析，子类中的普通构造器也可以调用它&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if name.isEmpty&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Student:User &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var grade:Int!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init!(name:String,grade:Int)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //调用父类的可能失败的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;--super.init(name:\(name))之后--&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //如果grade小于1，使用return nil触发构造失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if grade &amp;lt; 1&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.grade = grade&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let s1 = Student(name: &amp;quot;Tom&amp;quot;, grade: 4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;s1的name:\(s1.name),s1的grade:\(s1.grade)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let s2 = Student(name: &amp;quot;Jerry&amp;quot;, grade: 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s2 == nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let s3 = Student(name: &amp;quot;&amp;quot;, grade: 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s3 == nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;重写可能失败的构造器&quot;&gt;&lt;a href=&quot;#重写可能失败的构造器&quot; class=&quot;headerlink&quot; title=&quot;重写可能失败的构造器&quot;&gt;&lt;/a&gt;重写可能失败的构造器&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;子类可以用可能失败的构造器或者普通的构造器重写父类中的可能失败的构造器&lt;/li&gt;
&lt;li&gt;子类的普通构造器不能向上调用父类的可能失败的构造器&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Bird &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义普通构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init()&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义可能失败的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init?(name:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if name.isEmpty&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Sparrow:Bird &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let weight:Double!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init?(name:String,weight:Double)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //由于该构造器是可能失败的构造器，可以调用父类可能失败的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if weight &amp;lt;= 0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //使用普通构造器重写父类的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override init(name: String) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //由于该构造器是普通构造器，因此不能调用父类的可能失败的构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //因此只能调用父类的普通构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if name.isEmpty &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.name = &amp;quot;麻雀&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let sp1 = Sparrow(name: &amp;quot;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;sp1的name:\(sp1.name)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let sp2 = Sparrow(name: &amp;quot;&amp;quot;, weight: 2.2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(sp2 == nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let sp3 = Sparrow(name: &amp;quot;小黄嘴&amp;quot;, weight: 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(sp3 == nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;required构造器&quot;&gt;&lt;a href=&quot;#required构造器&quot; class=&quot;headerlink&quot; title=&quot;required构造器&quot;&gt;&lt;/a&gt;required构造器&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Swift允许在父类构造器前添加require关键字，用于声明所有子类必须包含该require构造器&lt;/li&gt;
&lt;li&gt;父类中声明的required构造器即可是指定构造器，也可以便利构造器&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weight:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    required init(name:String)&amp;#123;//1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    required convenience init(name:String,weight:Double)&amp;#123;//2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(name:name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.weight = weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Apple:Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    required init(name:String,weight:Double)&amp;#123;// override 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.color = &amp;quot;Pink&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(color:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    super.init(name: &amp;quot;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    required convenience init(name:String)&amp;#123;//override 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.init(color:&amp;quot;aaaa&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//该类将会继承得到父类的request构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Grape:Fruit&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var sugarRate:Double = 0.45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;析构器&quot;&gt;&lt;a href=&quot;#析构器&quot; class=&quot;headerlink&quot; title=&quot;析构器&quot;&gt;&lt;/a&gt;析构器&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;析构器是一个名为deinit的函数，不需要使用func关键字，无参数和返回值&lt;/li&gt;
&lt;li&gt;析构器在实例释放之前由系统自动调用，不要主动调用析构器&lt;/li&gt;
&lt;li&gt;子类自动继承父类的析构器，而且无论如何，子类析构器一定会调用父类析构器&lt;/li&gt;
&lt;li&gt;析构器可以访问该实例的所有实例存储属性，或者根据这些属性来关闭资源,比如关闭哪个文件，哪个程序链接&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weight:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义指定构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.weight = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义析构器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    deinit&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;程序准备释放fruit&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //此处可访问实例属性，可用于释放资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Apple:Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义指定构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String,weight:Double,color:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.color = color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    super.init(name: name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义析构器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    deinit&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;程序准备释放apple&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //此处可访问实例属性，可用于释放资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var ap:Apple? = Apple(name: &amp;quot;红富士&amp;quot;, weight: 0.34, color: &amp;quot;红色&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(ap!.name + &amp;quot;--&amp;gt;&amp;quot; + ap!.color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ap = nil //此处会自动调用析构器&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;便利构造器不是必要的，使用convenience关键字，横向调用类中的构造器,代码执行顺序:先调用构造器，再赋值&lt;/li&gt;
&lt;li&gt;指定构造器,一个类中至少有一个指定构造器，其必须负责初始化类中所有的实例存储属性&lt;/li&gt;
&lt;li&gt;指定构造器的代码执行顺序: 初始化属性–&amp;gt;赋值–&amp;gt;super init—&amp;gt; 赋值继承得到的属性&lt;/li&gt;
&lt;li&gt;类的构造第一阶段, 初始化属性–&amp;gt;赋值–&amp;gt;super init—&amp;gt; 赋值继承得到的属性 —&amp;gt;调用该属性&lt;/li&gt;
&lt;li&gt;类的构造第二阶段, 赋值或调用&lt;/li&gt;
&lt;li&gt;总之建议变量初始化的时候就直接赋值，最好。&lt;/li&gt;
&lt;li&gt;构造器的继承,子类有自己的就用自己的，没有就继承父类的全部&lt;/li&gt;
&lt;li&gt;重写使用override&lt;/li&gt;
&lt;li&gt;可能失败的构造器&lt;/li&gt;
&lt;li&gt;重写可能失败的构造器&lt;/li&gt;
&lt;li&gt;required构造器&lt;/li&gt;
&lt;li&gt;析构器&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;类和结构体的构造器&quot;&gt;&lt;a href=&quot;#类和结构体的构造器&quot; class=&quot;headerlink&quot; title=&quot;类和结构体的构造器&quot;&gt;&lt;/a&gt;类和结构体的构造器&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Swift的构造器构造出来的实例由系统隐式返回，不用return&lt;/li
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="swift" scheme="http://jackliu17.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>Swift中的扩展和协议</title>
    <link href="http://jackliu17.github.io/2016/03/14/Swift%E4%B8%AD%E7%9A%84%E6%89%A9%E5%B1%95%E5%92%8C%E5%8D%8F%E8%AE%AE/"/>
    <id>http://jackliu17.github.io/2016/03/14/Swift中的扩展和协议/</id>
    <published>2016-03-14T05:30:21.000Z</published>
    <updated>2016-04-15T07:27:24.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;扩展&quot;&gt;&lt;a href=&quot;#扩展&quot; class=&quot;headerlink&quot; title=&quot;扩展&quot;&gt;&lt;/a&gt;扩展&lt;/h1&gt;&lt;h2 id=&quot;特点&quot;&gt;&lt;a href=&quot;#特点&quot; class=&quot;headerlink&quot; title=&quot;特点&quot;&gt;&lt;/a&gt;特点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Swift的扩展与OC的Category类似，只是swift中的扩展没有名字.&lt;/li&gt;
&lt;li&gt;扩展并不是派生子类，因此不支持重写&lt;/li&gt;
&lt;li&gt;可以使一个已有类型符合一个或者多个协议&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;语法定义&quot;&gt;&lt;a href=&quot;#语法定义&quot; class=&quot;headerlink&quot; title=&quot;语法定义&quot;&gt;&lt;/a&gt;语法定义&lt;/h2&gt;&lt;p&gt;修饰符可以省略，或者是private,internal,public其中之一，类型可以是枚举，结构体和类其中之一&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[修饰符]extension已有类型&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//添加新功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[修饰符]extension已有类型:协议1，协议2&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//添加新功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;添加属性&quot;&gt;&lt;a href=&quot;#添加属性&quot; class=&quot;headerlink&quot; title=&quot;添加属性&quot;&gt;&lt;/a&gt;添加属性&lt;/h2&gt;&lt;p&gt;使用扩展可以添加3种属性：类型存储属性，实例计算属性，类型计算属性，就是不能添加实例存储属性&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;extension String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static var data:[String:Any] = [:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var length:Int&amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          return self.characters.count&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        let originLength = self.characters.count&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //如果新设置的长度大于字符串原有长度，在字符串后面添加空字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if newValue &amp;gt; originLength &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                for _ in 1...newValue - originLength &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  self += &amp;quot; &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //如果新设置的长度小于字符串原有长度，将后面多余的字符截断&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            else if newValue &amp;lt; originLength &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                var tmp = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                var count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                for ch in self.characters &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    tmp = &amp;quot;\(tmp)\(ch)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    count++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    //如果已经拼接了newValue个字符，跳出循环&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    if count == newValue &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self = tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String.data[&amp;quot;swift&amp;quot;] = 89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String.data[&amp;quot;OC&amp;quot;] = 92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(String.data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var s = &amp;quot;jike.org&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//通过length输出字符串的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s.length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//通过设置length属性，截断String后面多出来的字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//s.length = 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//print(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//通过设置length属性，在string后面补充空格&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.length = 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;添加方法&quot;&gt;&lt;a href=&quot;#添加方法&quot; class=&quot;headerlink&quot; title=&quot;添加方法&quot;&gt;&lt;/a&gt;添加方法&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;extension String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//添加一个新方法，用于获取当前字符串中指定范围的子串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func substringFromStart(start:Int, toEnd:Int) -&amp;gt;String&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var tmp = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for ch in self.characters &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if count &amp;gt;= start &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp = &amp;quot;\(tmp)\(ch)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if count &amp;gt;= toEnd - 1 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            count++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义一个类方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static func valueOf(value:Bool) -&amp;gt;String&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;quot;\(value)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var str = &amp;quot;jike.isagoodstudycenter&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//截取原字符串中从索引5开始，到索引10之间的子串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var subStr = str.substringFromStart(5, toEnd: 10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(subStr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(String.valueOf(true))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(String.valueOf(false))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;添加可变方法&quot;&gt;&lt;a href=&quot;#添加可变方法&quot; class=&quot;headerlink&quot; title=&quot;添加可变方法&quot;&gt;&lt;/a&gt;添加可变方法&lt;/h2&gt;&lt;p&gt;类不可以定义可变方法，不能通过扩展来为类添加可变方法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;extension Array &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//定义一个方法，用于计算数组的交集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutating func retainAll(array:[Element],compartor:(Element,Element)-&amp;gt;Bool)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var tmp = [Element]()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //遍历当前数组中所有元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for ele in self &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //遍历第二个数组的所有元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for target in array &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //如果两个元素通过compartor比较返回true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if compartor(ele,target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tmp.append(ele)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self = tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var books = [&amp;quot;iOS&amp;quot;,&amp;quot;Android&amp;quot;,&amp;quot;Swift&amp;quot;,&amp;quot;Java&amp;quot;,&amp;quot;Ruby&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;books.retainAll([&amp;quot;Android&amp;quot;,&amp;quot;iOS&amp;quot;,&amp;quot;C&amp;quot;])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return $0 == $1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(books)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;添加下标&quot;&gt;&lt;a href=&quot;#添加下标&quot; class=&quot;headerlink&quot; title=&quot;添加下标&quot;&gt;&lt;/a&gt;添加下标&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;extension String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    subscript(idx:Int)-&amp;gt;String&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //如果下标位于字符串长度之内&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if idx &amp;gt; -1 &amp;amp;&amp;amp; idx &amp;lt; self.characters.count &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                var count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                var result = &amp;quot;&amp;quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //通过遍历搜索字符串内指定索引处的字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                for ch in self.characters&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    if count == idx &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    //将找到的字符转换为字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        result = &amp;quot;\(ch)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    count++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //如果下标没有位于字符串长度之内，返回空字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              return&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var result = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for ch in self.characters&amp;#123;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if count == idx&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result += newValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result += &amp;quot;\(ch)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                count++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self = result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义只读下标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    subscript(start:Int,end:Int)-&amp;gt;String&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //如果start,end都位于字符串长度之内，且start小于end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if start &amp;gt; -1 &amp;amp;&amp;amp; start &amp;lt; self.characters.count&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;&amp;amp; end &amp;gt; -1 &amp;amp;&amp;amp; end &amp;lt;= self.characters.count&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;&amp;amp; start &amp;lt; end &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var result = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for ch in self.characters &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if count &amp;gt;= start &amp;amp;&amp;amp; count &amp;lt; end&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result.append(ch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            count++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //如果给定的下标不符合要求，程序直接返回空字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//定义一个字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var s = &amp;quot;jike is a excellent training center&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//通过下标访问索引为5的字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s[5])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//通过下标改变字符串指定索引处的字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s[0] = &amp;quot;J&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s[2] = &amp;quot;K&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//通过带两个Int参数的下标来获取字符串中间范围的子串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s[2,6])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;添加构造器&quot;&gt;&lt;a href=&quot;#添加构造器&quot; class=&quot;headerlink&quot; title=&quot;添加构造器&quot;&gt;&lt;/a&gt;添加构造器&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;没有构造器，系统会提供默认的，&lt;/li&gt;
&lt;li&gt;已经定义了，系统就不会提供构造器&lt;/li&gt;
&lt;li&gt;想要他们并存，就需要扩展，通过扩展添加的构造器，不会影响原有的构造器&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//定义一个结构体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;struct SomeStruct&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var count:Int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//使用扩展来添加构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;extension SomeStruct&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(count:Int)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.count = count&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.name = &amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面使用了SomeStruct的3个构造器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var sc1 = SomeStruct(name: &amp;quot;jike&amp;quot;, count: 5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var sc2 = SomeStruct(name: &amp;quot;crazyjike&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var sc3 = SomeStruct(count: 20)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;添加嵌套类型&quot;&gt;&lt;a href=&quot;#添加嵌套类型&quot; class=&quot;headerlink&quot; title=&quot;添加嵌套类型&quot;&gt;&lt;/a&gt;添加嵌套类型&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;extension String &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//定义一个嵌套枚举&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    enum Suit:String&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Diamond = &amp;quot;A&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Club = &amp;quot;B&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Heart = &amp;quot;C&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Spade = &amp;quot;D&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //通过扩展为String增加一个类型方法，用于判断指定字符串属于哪种花色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static func judgeSuit(s:String)-&amp;gt;Suit?&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        switch(s)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;quot;A&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return .Diamond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;quot;B&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return .Club&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;quot;C&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return .Heart&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case &amp;quot;D&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return .Spade&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//使用Strig包含的嵌套枚举&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var s1:String.Suit? = String.judgeSuit(&amp;quot;C&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var s2:String.Suit? = String.judgeSuit(&amp;quot;j&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(s2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;协议-规范和实现的分离，松耦合的设计&quot;&gt;&lt;a href=&quot;#协议-规范和实现的分离，松耦合的设计&quot; class=&quot;headerlink&quot; title=&quot;协议 - 规范和实现的分离，松耦合的设计&quot;&gt;&lt;/a&gt;协议 - 规范和实现的分离，松耦合的设计&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;协议定义了一种规范，不提供任何实现&lt;/li&gt;
&lt;li&gt;修饰符:可以省略，也可以是private,internal,public之一&lt;/li&gt;
&lt;li&gt;一个协议可以有多个直接父协议，但协议只能继承协议，不能继承类&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[修饰符]protocol协议名:父协议1,父协议2,...&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//协议内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. Struct结构名:第一个协议，第二个协议,...&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//实现协议要求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.Class类名:SuperClass,第一个协议，第二个协议,...&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;协议语法和属性要求&quot;&gt;&lt;a href=&quot;#协议语法和属性要求&quot; class=&quot;headerlink&quot; title=&quot;协议语法和属性要求&quot;&gt;&lt;/a&gt;协议语法和属性要求&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class var 属性名:类型&amp;#123;get set&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;class可有可无。如果有class关键字，说明为类型属性，否则为实例属性。不可以使用static代替class&lt;/li&gt;
&lt;li&gt;get和set部分:只需要写get,set即可，无须提供实现，set可有可无&lt;/li&gt;
&lt;li&gt;协议多继承，弥补了类单继承的不足&lt;/li&gt;
&lt;li&gt;协议中使用class关键字定义类型属性，但值类型中依然使用static定义类型属性&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;protocol Strokable&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var strokeWidth:Double &amp;#123;get set&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protocol Fullable&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var fullColor:Color? &amp;#123;get set&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//定义一个枚举作为协议属性的类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enum Color &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Red,Green,Blue,Yellow,Cyan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protocol HasArea:Fullable,Strokable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var area:Double&amp;#123;get&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protocol Mathable&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //这里怎么用static? 和说明上不一样哦&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static var pi: Double &amp;#123;get&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static var e: Double &amp;#123;get&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//让Rect实现2个协议&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;struct Rect:HasArea,Mathable&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var width:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var height:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(width:Double,height:Double)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.width = width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.height = height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //使用存储属性实现Fullable协议的fullColor属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var fullColor:Color?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //使用存储属性实现Strokable协议的strokeWidth属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var strokeWidth:Double = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //使用存储属性实现HASAREA协议要求的area属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var area: Double&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return width * height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //通过存储属性实现Mathable协议要求的两个类型属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //虽然协议中使用class关键字定义类型属性，但值类型中依然使用static定义类型属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static var pi:Double = 3.14159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static var e:Double = 2.71626&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;扩展&quot;&gt;&lt;a href=&quot;#扩展&quot; class=&quot;headerlink&quot; title=&quot;扩展&quot;&gt;&lt;/a&gt;扩展&lt;/h1&gt;&lt;h2 id=&quot;特点&quot;&gt;&lt;a href=&quot;#特点&quot; class=&quot;headerlink&quot; title=&quot;特点&quot;&gt;&lt;/a&gt;特点&lt;/h2&gt;&lt;ol&gt;
&lt;
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="swift" scheme="http://jackliu17.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>Swift中的继承和多态</title>
    <link href="http://jackliu17.github.io/2016/03/13/Swift%E4%B8%AD%E7%9A%84%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/"/>
    <id>http://jackliu17.github.io/2016/03/13/Swift中的继承和多态/</id>
    <published>2016-03-13T04:16:20.000Z</published>
    <updated>2016-04-15T05:44:37.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h1&gt;&lt;h2 id=&quot;继承的特点&quot;&gt;&lt;a href=&quot;#继承的特点&quot; class=&quot;headerlink&quot; title=&quot;继承的特点&quot;&gt;&lt;/a&gt;继承的特点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;单继承，每个子类只有一个直接父类，可以有多个间接父类. 与OC不同，他不继承NSObject。如果不显示父类，就说明没有父类。&lt;/li&gt;
&lt;li&gt;子类继承父类，可以获得父类的属性，方法，下标，也可以进行重写&lt;/li&gt;
&lt;li&gt;swift的类并不是从一个通用的基类继承而来的&lt;/li&gt;
&lt;li&gt;override修饰被重写的部分&lt;/li&gt;
&lt;li&gt;final修饰的类不能被继承，属性，方法和下标不能被重写&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;父类的继承&quot;&gt;&lt;a href=&quot;#父类的继承&quot; class=&quot;headerlink&quot; title=&quot;父类的继承&quot;&gt;&lt;/a&gt;父类的继承&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Fruit &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weight = 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func info()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;我是一个水果，重\(weight)g!&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Apple:Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func taste()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;\(name)吃起来很好吃&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var a = Apple()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//Apple本身没有weight属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//因为Apple的父类有weight属性，也可以访问Apple实例的weight属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.weight = 56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.name = &amp;quot;红富士&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//调用Apple实例的info方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.info()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.taste()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;重写父类的方法&quot;&gt;&lt;a href=&quot;#重写父类的方法&quot; class=&quot;headerlink&quot; title=&quot;重写父类的方法&quot;&gt;&lt;/a&gt;重写父类的方法&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Bird&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //Bird类的fly()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func fly()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;我在天空里自由自在的飞翔&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Ostrich:Bird &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //重写Bird类的fly()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func fly() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;我只能在地上奔跑...&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//创建Ostrich实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var os = Ostrich()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//执行Ostrich实例的fly()方法，将输出....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.fly()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;重写父类的属性&quot;&gt;&lt;a href=&quot;#重写父类的属性&quot; class=&quot;headerlink&quot; title=&quot;重写父类的属性&quot;&gt;&lt;/a&gt;重写父类的属性&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Bird &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var speed: Double = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Ostrich: Bird &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //重写Bird类的speed属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override var speed:Double&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;正在访问被重写的属性&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return super.speed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.speed = newValue * newValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//创建Ostrich实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var os = Ostrich()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//对重写后的属性赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.speed = 20.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 访问被重写后的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;os的速度为:\(os.speed)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;重写属性观察者&quot;&gt;&lt;a href=&quot;#重写属性观察者&quot; class=&quot;headerlink&quot; title=&quot;重写属性观察者&quot;&gt;&lt;/a&gt;重写属性观察者&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;不要同时添加set和didSet，因为在didSet里就可以改变属性的值&lt;/li&gt;
&lt;li&gt;不要给常量存储属性和只读计算属性添加属性观察者，因为值是不会变的，观察者又有什么用 &lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Bird &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var speed: Double = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Ostrich: Bird &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //重写Bird类的speed属性,添加属性观察者  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override var speed:Double&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        didSet&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //属性值被改变完成后，将会自动执行该方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&amp;quot;改变之前的speed为:\(oldValue)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            super.speed *= speed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//创建Ostrich实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var os = Ostrich()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//对重写后的属性赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os.speed = 20.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 访问被重写后的属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;os的速度为:\(os.speed)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;重写父类的下标&quot;&gt;&lt;a href=&quot;#重写父类的下标&quot; class=&quot;headerlink&quot; title=&quot;重写父类的下标&quot;&gt;&lt;/a&gt;重写父类的下标&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Base &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    subscript(idx:Int) -&amp;gt;Int&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;父类的下标的get方法&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return idx + 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Sub:Base &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //重写Base类的下标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override subscript(idx:Int) -&amp;gt;Int&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&amp;quot;重写后的下标的get方法&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&amp;quot;通过super访问被重写之前的下标:\(super[idx])&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return idx * idx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        set&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&amp;quot;重写后的下标的setter方法，传入的参数值为:\(newValue)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var base = Base()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(base[7]) //输出17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//创建Sub实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var sub = Sub()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(sub[7]) //输出49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sub[7] = 90&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;多态&quot;&gt;&lt;a href=&quot;#多态&quot; class=&quot;headerlink&quot; title=&quot;多态&quot;&gt;&lt;/a&gt;多态&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Swift引用变量有两个类型:编译时类型，运行时类型，编译器只认编译时类型&lt;/li&gt;
&lt;li&gt;编译时类型由声明该变量时使用类型决定，编译器只认变量的编译类型&lt;/li&gt;
&lt;li&gt;运行时类型由实际赋予该变量的实例决定&lt;/li&gt;
&lt;li&gt;多态:相同类型的变量，调用同一个方法时呈现出多种不同的行为特征。也就是编译时类型和运行时类型不一样&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class BaseClass &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func base()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;父类的普通方法&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func test()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&amp;quot;父类的被覆盖的方法&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class SubClass:BaseClass &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    override func test() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;子类的覆盖父类的方法&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func sub()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;子类的普通方法&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let bc:BaseClass = BaseClass()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面两次调用将执行BaseClass的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bc.base()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bc.test()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let sc:SubClass = SubClass()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面调用将执行从父类继承到的base()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sc.base()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面调用将执行从当前类的test()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sc.test()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sc.sub()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面编译时类型和运行时类型不一样，多态发生&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面将子类实例赋值给父类变量，称为向上转型,由系统自动完成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//编译类型是BaseClass，运行时类型是SubClass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let ploymophicBc: BaseClass = SubClass()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面调用将执行父类继承到的base()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ploymophicBc.base()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面调用将执行从当前类的test()方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ploymophicBc.test()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//因为ploymophicBc的编译类型是BaseClass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//BaseClass类没有提供sub方法，所以下面代码编译时会出现错误&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//ploymophicBc.sub()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;运算符检查类型-（变量-is-类）&quot;&gt;&lt;a href=&quot;#运算符检查类型-（变量-is-类）&quot; class=&quot;headerlink&quot; title=&quot;运算符检查类型 （变量 is 类）&quot;&gt;&lt;/a&gt;运算符检查类型 （变量 is 类）&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;使用is运算符检查类型，返回值为布尔类型，判断前面的引用变量是否引用后面的类或者子类的实例。是则true&lt;/li&gt;
&lt;li&gt;前一个操作数是一个引用类型变量，后一个操作数是一个类&lt;/li&gt;
&lt;li&gt;运算符前面操作数的编译类型要么与后面的类相同，要么具有继承关系，否则编译报错。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//定义一个可被objective-C类使用的协议&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@objc protocol TestProtocol&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let hello:NSObject = &amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;字符串是否是NSString类的实例:\(hello is NSString)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;字符串是否是NSDate类的实例:\(hello is NSDate)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&amp;quot;字符串是否是TestProtocol协议的实例:\(hello is TestProtocol)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let a: NSString = &amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//下面这行代码会报错&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//print(&amp;quot;字符串是否是Math类的实例:\(a is NSDate)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;转型&quot;&gt;&lt;a href=&quot;#转型&quot; class=&quot;headerlink&quot; title=&quot;转型&quot;&gt;&lt;/a&gt;转型&lt;/h1&gt;&lt;h2 id=&quot;向上转型&quot;&gt;&lt;a href=&quot;#向上转型&quot; class=&quot;headerlink&quot; title=&quot;向上转型&quot;&gt;&lt;/a&gt;向上转型&lt;/h2&gt;&lt;p&gt;将子类实例赋值给父类变量，称为向上转型,由系统自动完成&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//编译类型是BaseClass，运行时类型是SubClass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let ploymophicBc: BaseClass = SubClass()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;向下转型-（父类的对象-as-子类）&quot;&gt;&lt;a href=&quot;#向下转型-（父类的对象-as-子类）&quot; class=&quot;headerlink&quot; title=&quot;向下转型 （父类的对象 as! 子类）&quot;&gt;&lt;/a&gt;向下转型 （父类的对象 as! 子类）&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;使用as运算符向下转型.&lt;/li&gt;
&lt;li&gt;向上转型:把一个子类实例直接赋给一个父类引用变量，不用任何类型转换&lt;/li&gt;
&lt;li&gt;引用变量只能调用其编译时类型的方法，强制转换为其实际类型，可以调用运行时类型的方法，这种强制转换为向下转型&lt;/li&gt;
&lt;li&gt;向下转型运算符: 1. as!强制将运算符前面的引用变量转换为后面的类型。 2.(a..as?…b)!可选形式的向下转换&lt;/li&gt;
&lt;li&gt;向下转换只能在具有继承关系的两个类型之间进行&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;例子1&quot;&gt;&lt;a href=&quot;#例子1&quot; class=&quot;headerlink&quot; title=&quot;例子1&quot;&gt;&lt;/a&gt;例子1&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//编译类型为NSObject的obj向下转换，程序可以运行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let obj:NSObject = &amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let objStr:NSString = obj as! NSString&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(objStr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//编译类型为NSObject的obj向下转换为NSString，但实际上它运行时的类型为NSNumber。编译没问题，但运行相冲突&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let objPri:NSObject = 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let str:NSString = objPri as! NSString&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//针对上述代码有以下两个解决方案&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//1.------- 先进行判断，再转换&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if objPri is NSString &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    let str: NSString = objPri as! NSString&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//2.------- 使用可选类型转换符as?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;let str2:NSString = (objPri as? NSString)!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;例子2&quot;&gt;&lt;a href=&quot;#例子2&quot; class=&quot;headerlink&quot; title=&quot;例子2&quot;&gt;&lt;/a&gt;例子2&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var name:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var weight:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name:String, weight:Double)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.name = name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.weight = weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Apple:Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var color:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name: String, weight: Double,color:String) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.color = color&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: name, weight: weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class Grape: Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var sugarRate:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(name: String, weight: Double,sugarRate:Double) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.sugarRate = sugarRate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super.init(name: name, weight: weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//定义元素为any的数组，该数组的元素几乎可以放置任何数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var anyArray:[Any] = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;swift&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    29,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&amp;quot;iOS&amp;quot;:89,&amp;quot;android&amp;quot;:92],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Fruit(name: &amp;quot;Cherry&amp;quot;, weight: 2.3),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Apple(name: &amp;quot;Pink lady&amp;quot;, weight: 2.4, color: &amp;quot;Pink&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//遍历元素为Any的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for element in anyArray&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//尝试将数组元素强转为Fruit，然后执行可选绑定&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if let f = element as? Fruit &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&amp;quot;\(f.name)水果重\(f.weight)&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//定义元素为AnyObject的数组，该数组的元素只能是对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var anyObjectArray:[AnyObject] = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     Fruit(name: &amp;quot;Cherry&amp;quot;, weight: 2.3),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Apple(name: &amp;quot;Pink lady&amp;quot;, weight: 2.4, color: &amp;quot;Pink&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Any和AnyObject&quot;&gt;&lt;a href=&quot;#Any和AnyObject&quot; class=&quot;headerlink&quot; title=&quot;Any和AnyObject&quot;&gt;&lt;/a&gt;Any和AnyObject&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;AnyObject: 可代表任何类的实例&lt;/li&gt;
&lt;li&gt;Any: 可代表任何类型，包括Int,Double等值类型，AnyObject修饰的实例&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;嵌套类型&quot;&gt;&lt;a href=&quot;#嵌套类型&quot; class=&quot;headerlink&quot; title=&quot;嵌套类型&quot;&gt;&lt;/a&gt;嵌套类型&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;在一个类型的内部定义另一个类型&lt;/li&gt;
&lt;li&gt;Swift的枚举、类，结构体都可以定义嵌套类型&lt;/li&gt;
&lt;li&gt;Swift的嵌套类型支持多级嵌套&lt;/li&gt;
&lt;li&gt;嵌套类型不允许使用static或者class修饰&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class User &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var holidays:[Weekday]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var location:Point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init(holidays:[Weekday],location:Point)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.holidays = holidays&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.location = location&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义一个嵌套类型:结构体Point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct Point &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var latitude:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var longitude:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var position:Orientation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //嵌套枚举&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        enum Orientation&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case Up,Left,Bottom,Right&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //定义一个嵌套类型:枚举Weekday&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    enum Weekday&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    case Monday, Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        struct Duration &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var num:Double&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            var unit:String&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;cup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//使用嵌套类型时，需要以被嵌套类型的名字为前缀&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var user = User(holidays:[],location:User.Point(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    latitude:-23.33,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    longitude:122.11,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    position:User.Point.Orientation.Left))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//引用User.Weekday嵌套枚举&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user.holidays.append(User.Weekday.Saturday)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user.holidays.append(User.Weekday.Sunday)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;继承的特点，一个直接，多个间接，不写则无，不继承NSObject&lt;/li&gt;
&lt;li&gt;因为继承，所以可以重写属性，在重写属性中添加观察者，重写方法，下标，使用override，如果要不被重写，使用final&lt;/li&gt;
&lt;li&gt;多态，就是编译类型和运行类型不同，例如左侧变量属性是父类，右侧赋值是子类对象。&lt;/li&gt;
&lt;li&gt;向上转型:父类变量赋予子类的值，执行子类的方法，前提是该父类的方法被override&lt;/li&gt;
&lt;li&gt;向下转型:（父类的对象 as! 子类）,只能在具有继承关系的两个类型之间进行,转换前最好先进行is判断&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;继承&quot;&gt;&lt;a href=&quot;#继承&quot; class=&quot;headerlink&quot; title=&quot;继承&quot;&gt;&lt;/a&gt;继承&lt;/h1&gt;&lt;h2 id=&quot;继承的特点&quot;&gt;&lt;a href=&quot;#继承的特点&quot; class=&quot;headerlink&quot; title=&quot;继承的特点&quot;&gt;&lt;/a&gt;继承的特
    
    </summary>
    
      <category term="IT" scheme="http://jackliu17.github.io/categories/IT/"/>
    
    
      <category term="iOS" scheme="http://jackliu17.github.io/tags/iOS/"/>
    
      <category term="swift" scheme="http://jackliu17.github.io/tags/swift/"/>
    
  </entry>
  
</feed>
